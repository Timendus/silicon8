(()=>{var t={694:(t,e,s)=>{const n=s(447);t.exports=t=>{switch(t){case n.VIP:case n.STRICTVIP:case n.BLINDVIP:return r.chip8;case n.SCHIP:case n.XOCHIP:return r.schip}};const r={chip8:new Uint8Array([240,144,144,144,240,96,32,32,32,112,240,16,240,128,240,240,16,112,16,240,160,160,240,32,32,240,128,240,16,240,240,128,240,144,240,240,16,16,16,16,240,144,240,144,240,240,144,240,16,240,240,144,240,144,144,240,80,112,80,240,240,128,128,128,240,240,80,80,80,240,240,128,240,128,240,240,128,240,128,128,60,126,231,195,195,195,195,231,126,60,24,56,88,24,24,24,24,24,24,60,62,127,195,6,12,24,48,96,255,255,60,126,195,3,14,14,3,195,126,60,6,14,30,54,102,198,255,255,6,6,255,255,192,192,252,254,3,195,126,60,62,124,224,192,252,254,195,195,126,60,255,255,3,6,12,24,48,96,96,96,60,126,195,195,126,126,195,195,126,60,60,126,195,195,127,63,3,3,62,124]),schip:new Uint8Array([240,144,144,144,240,32,96,32,32,112,240,16,240,128,240,240,16,112,16,240,144,144,240,16,16,240,128,240,16,240,240,128,240,144,240,240,16,32,64,64,240,144,240,144,240,240,144,240,16,240,240,144,240,144,144,224,144,224,144,224,240,128,128,128,240,224,144,144,144,224,240,128,240,128,240,240,128,240,128,128,60,126,231,195,195,195,195,231,126,60,24,56,88,24,24,24,24,24,24,60,62,127,195,6,12,24,48,96,255,255,60,126,195,3,14,14,3,195,126,60,6,14,30,54,102,198,255,255,6,6,255,255,192,192,252,254,3,195,126,60,62,124,224,192,252,254,195,195,126,60,255,255,3,6,12,24,48,96,96,96,60,126,195,195,126,126,195,195,126,60,60,126,195,195,127,63,3,3,62,124]),silicon8:new Uint8Array([96,144,144,144,96,32,96,32,32,112,224,16,96,128,240,224,16,96,16,224,128,144,240,16,16,240,128,224,16,224,96,128,224,144,96,240,16,32,64,64,96,144,96,144,96,96,144,112,16,96,96,144,240,144,144,224,144,224,144,224,112,128,128,128,112,224,144,144,144,224,240,128,240,128,240,240,128,240,128,128,60,126,231,195,195,195,195,231,126,60,24,56,88,24,24,24,24,24,24,60,62,127,195,6,12,24,48,96,255,255,60,126,195,3,14,14,3,195,126,60,6,14,30,54,102,198,255,255,6,6,255,255,192,192,252,254,3,195,126,60,62,124,224,192,252,254,195,195,126,60,255,255,3,6,12,24,48,96,96,96,60,126,195,195,126,126,195,195,126,60,60,126,195,195,127,63,3,3,62,124])}},447:t=>{t.exports={VIP:0,STRICTVIP:1,SCHIP:2,XOCHIP:3,BLINDVIP:4}},497:t=>{const e=document.getElementById("display"),s=e.getContext("2d");e.width=64,e.height=32,t.exports=t=>{const e=s.createImageData(64,32);for(let s=0;s<32;s++)for(let n=0;n<64;n++){const r=Math.floor(64*s/8+n/8),i=n%8,o=64*s*4+4*n;e.data[o+0]=t[r]&128>>i?255:0,e.data[o+1]=t[r]&128>>i?170:0,e.data[o+2]=t[r]&128>>i?68:0,e.data[o+3]=221}s.putImageData(e,0,0)}},755:(t,e,s)=>{const n=s(694),r=new Go;WebAssembly.instantiateStreaming||(WebAssembly.instantiateStreaming=async(t,e)=>{const s=await(await t).arrayBuffer();return await WebAssembly.instantiate(s,e)}),t.exports=class{constructor({playSound:t,stopSound:e,render:s}){this._cyclesPerFrame=30,this._render=s,t||=()=>{},e||=()=>{},Object.assign(r.importObject.env,{"main.randomByte":()=>255&Math.floor(256*Math.random()),"main.playSound":t,"main.stopSound":e})}init(){return WebAssembly.instantiateStreaming(fetch("silicon8.wasm"),r.importObject).then((t=>{this._cpu=t.instance.exports,r.run(t.instance);const e=new Uint8Array(this._cpu.memory.buffer,this._cpu.displayPtr(),this._cpu.displaySize());setInterval((()=>{this._cpu.cycles(this._cyclesPerFrame),this._cpu.screenDirty()&&(this._render(e),this._cpu.setScreenClean())}),1e3/60)})).catch((t=>{console.error(t)}))}setCyclesPerFrame(t){this._cyclesPerFrame=t}loadProgram(t,e){this._cpu.initialize(t);const s=new Uint8Array(this._cpu.memory.buffer,this._cpu.ramPtr(),this._cpu.ramSize()),r=this._cpu.ramSize();for(let t=0;t<r;t++)s[t]=0;const i=n(t);for(let t=0;t<i.length;t++)s[t]=i[t];for(let t=512;t<512+e.length;t++)s[t]=e[t-512]}dumpStatus(){this._cpu.dumpStatus()}pressKey(t){this._cpu.pressKey(t)}releaseKey(t){this._cpu.releaseKey(t)}}},432:t=>{t.exports=t=>{const e={38:5,37:7,39:9,40:8,49:1,50:2,51:3,52:"C",81:4,87:5,69:6,82:"D",65:7,83:8,68:9,70:"E",90:"A",88:0,67:"B",86:"F",48:0,53:5,54:6,55:7,56:8,57:9};window.addEventListener("keydown",(s=>{13==s.keyCode&&t&&t.dumpStatus(),e[s.keyCode]&&t&&t.pressKey(e[s.keyCode])})),window.addEventListener("keyup",(s=>{t&&t.releaseKey(e[s.keyCode])}))}},281:t=>{let e;function s(t){e||function(){const t=new(window.AudioContext||window.webkitAudioContext||window.audioContext),s=t.createOscillator();e=t.createGain(),e.gain.value=0,s.frequency.value=600,s.type="triangle",s.connect(e),e.connect(t.destination),s.start()}(),e.gain.value=t}t.exports={playSound:()=>{s(.1)},stopSound:()=>{s(0)}}}},e={};function s(n){var r=e[n];if(void 0!==r)return r.exports;var i=e[n]={exports:{}};return t[n](i,i.exports,s),i.exports}(()=>{"use strict";class t{constructor(){this._handlers={},document.addEventListener("click",(t=>this._callHandler("click",t))),document.addEventListener("mousedown",(t=>this._callHandler("mousedown",t))),document.addEventListener("mouseup",(t=>this._callHandler("mouseup",t)))}register(t,e={click:null,mousedown:null,mouseup:null}){"function"==typeof e&&(e={click:e}),this._handlers[t]=this._handlers[t]||[],this._handlers[t].push(e)}_callHandler(t,e){Object.keys(this._handlers).forEach((s=>{null!==e.target.closest(s)&&this._handlers[s].map((e=>e[t])).forEach((t=>{"function"!=typeof t||e.defaultPrevented||t(e,s)}))}))}}t.instance=function(){return t._instance?t._instance:t._instance=new t};const e=t;class n{constructor(t="dragging"){this._dragClass=t,this._handlers={},document.addEventListener("dragover",(t=>this._dragOver(t))),document.addEventListener("dragleave",(t=>this._dragLeave(t))),document.addEventListener("drop",(t=>this._drop(t)))}register(t,s){this._handlers[t]=s,e.instance().register(t,((t,e)=>this._openFileDialog(t,e)))}_dragOver(t){this._isDropTarget(t.target)&&(t.stopPropagation(),t.preventDefault(),t.dataTransfer.dropEffect="copy",t.target.classList.add(this._dragClass))}_dragLeave(t){this._isDropTarget(t.target)&&(t.stopPropagation(),t.preventDefault(),t.target.classList.remove(this._dragClass))}_drop(t){let e=this._isDropTarget(t.target);e&&(t.stopPropagation(),t.preventDefault(),t.target.classList.remove(this._dragClass),this._handleFile(e,t,t.dataTransfer.files[0]))}_isDropTarget(t){return Object.keys(this._handlers).find((e=>{if(t.closest(e))return e}))||!1}_openFileDialog(t,e){const s=document.createElement("input");s.type="file",s.addEventListener("change",(s=>this._handleFile(e,t,s.target.files[0]))),s.click()}_handleFile(t,e,s){this._readFile(s).then((n=>this._handlers[t](s,n,e)))}_readFile(t){return new Promise(((e,s)=>{var n=new FileReader;n.addEventListener("load",(t=>e(t.target.result))),n.readAsDataURL(t)}))}}n.instance=function(){return n._instance?n._instance:n._instance=new n};const r=n;class i{constructor(t=!1,e=null){this._routes=[],t&&this.addRoutes(t,e)}install(){return e.instance().register("a[href]",(t=>this._handleClick(t))),window.addEventListener("hashchange",(t=>this._handleNavigationEvent(t))),window.addEventListener("load",(t=>this._handleNavigationEvent(t))),this}addRoute(t,e){return this._routes.push([t,e]),this}addRoutes(t,e=null){return Array.isArray(t)?t.forEach((t=>this.addRoute(t,e))):Object.keys(t).forEach((e=>this.addRoute(e,t[e]))),this}route(t,e){const s=this._matchingRoute(t);return s&&s.router?s.router.route(s.subpath,e):s&&s.handler?s.handler(s.route,s.matches,e):void 0}_handleClick(t){let e=t.target.getAttribute("href");e.startsWith("#")&&(e=e.substr(1),this._matchingRoute(e)&&(window.location.hash=e,t.preventDefault()))}_handleNavigationEvent(t){let e=window.location.hash;e.startsWith("#")&&(e=e.substr(1)),this.route(e,t)}_matchingRoute(t){return t&&(this._subRouterMatch(t)||this._stringMatch(t)||this._regExpMatch(t))}_subRouterMatch(t){const e=this._routes.filter((t=>t[1]instanceof i)).find((e=>t.startsWith(e[0]+"/")||t==e[0]));return e&&{router:e[1],subpath:t.substr(e[0].length+1)}}_stringMatch(t){const e=this._routes.find((e=>t==e[0]));return e&&{route:e[0],handler:e[1]}}_regExpMatch(t){const e=this._routes.filter((t=>t[0]instanceof RegExp)).find((e=>t.match(e[0])));return e&&{route:e[0],handler:e[1],matches:t.match(e[0])}}}const o={Click:e,FileTarget:r,Router:i,Energize:class{constructor(t,s={}){this._scope=t,this._options=this._normalizeOptions(s),e.instance().register(`${t} [${this._options.open}], ${t} [${this._options.close}], ${t} [${this._options.toggle}]`,(t=>this._handleClick(t)))}_normalizeOptions(t){return Object.assign({class:"active",open:"data-open",close:"data-close",toggle:"data-toggle",group:"data-group",timer:"data-timer",follower:"data-follower"},t)}_handleClick(t){const e=t.target.closest(`[${this._options.open}], [${this._options.close}], [${this._options.toggle}]`),s=e.getAttribute(this._options.close),n=e.getAttribute(this._options.open),r=e.getAttribute(this._options.toggle);let i=s?document.querySelectorAll(`${this._scope} ${s}`):[],o=n?document.querySelectorAll(`${this._scope} ${n}`):[];i=[...i,...r?document.querySelectorAll(`${this._scope} ${r}.${this._options.class}`):[]],o=[...o,...r?document.querySelectorAll(`${this._scope} ${r}:not(.${this._options.class})`):[]],this._close(i),this._open(o),t.preventDefault(),t.stopPropagation()}_close(t){t.forEach((t=>{t.classList.remove(this._options.class),this._close(this._followers(t))}))}_open(t){t.forEach((t=>{this._close(this._group(t)),t.classList.add(this._options.class),this._open(this._followers(t));const e=t.getAttribute(this._options.timer);e&&window.setTimeout((()=>this._close([t])),e)}))}_group(t){const e=t.getAttribute(this._options.group);return e?[...document.querySelectorAll(`${this._scope} [${this._options.group}=${e}]`)]:[]}_followers(t){const e=t.getAttribute(this._options.follower);return e?[...document.querySelectorAll(`${this._scope} ${e}`)]:[]}}},a=o;window.Thimbleful=o,window.addEventListener("load",(async()=>{const t=s(755),e=s(432),n=s(497),{playSound:r,stopSound:i}=s(281),o=new t({render:n,playSound:r,stopSound:i});await o.init(),e(o);const c=new Uint8Array([0,224,97,25,96,10,34,18,96,11,34,18,96,12,34,18,18,16,98,12,240,41,209,37,113,5,0,238]);o.loadProgram(0,c),a.FileTarget.instance().register("#display",((t,e)=>{if(".ch8"!=t.name.substr(-4))return alert("You can only load *.ch8 CHIP-8 ROMs");e=atob(e.split(",")[1]);const s=new Uint8Array(new ArrayBuffer(e.length));for(let t=0;t<e.length;t++)s[t]=e.charCodeAt(t);o.loadProgram(0,s)}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJtYXBwaW5ncyI6IjJCQUFBLE1BQU1BLEVBQVEsRUFBUSxLQUV0QkMsRUFBT0MsUUFBVUMsSUFDZixPQUFPQSxHQUNMLEtBQUtILEVBQU1JLElBQ1gsS0FBS0osRUFBTUssVUFDWCxLQUFLTCxFQUFNTSxTQUNULE9BQU9DLEVBQU1DLE1BQ2YsS0FBS1IsRUFBTVMsTUFDWCxLQUFLVCxFQUFNVSxPQUNULE9BQU9ILEVBQU1JLFFBSW5CLE1BQU1KLEVBQVEsQ0FDWkMsTUFBTyxJQUFJSSxXQUFXLENBQ3BCLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFFQSxHQUNBLEdBQ0EsR0FDQSxHQUNBLElBRUEsSUFDQSxHQUNBLElBQ0EsSUFDQSxJQUVBLElBQ0EsR0FDQSxJQUNBLEdBQ0EsSUFFQSxJQUNBLElBQ0EsSUFDQSxHQUNBLEdBRUEsSUFDQSxJQUNBLElBQ0EsR0FDQSxJQUVBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFFQSxJQUNBLEdBQ0EsR0FDQSxHQUNBLEdBRUEsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUVBLElBQ0EsSUFDQSxJQUNBLEdBQ0EsSUFFQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBRUEsSUFDQSxHQUNBLElBQ0EsR0FDQSxJQUVBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFFQSxJQUNBLEdBQ0EsR0FDQSxHQUNBLElBRUEsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUVBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFFQSxHQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxHQUVBLEdBQ0EsR0FDQSxHQUNBLEdBQ0EsR0FDQSxHQUNBLEdBQ0EsR0FDQSxHQUNBLEdBRUEsR0FDQSxJQUNBLElBQ0EsRUFDQSxHQUNBLEdBQ0EsR0FDQSxHQUNBLElBQ0EsSUFFQSxHQUNBLElBQ0EsSUFDQSxFQUNBLEdBQ0EsR0FDQSxFQUNBLElBQ0EsSUFDQSxHQUVBLEVBQ0EsR0FDQSxHQUNBLEdBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxFQUNBLEVBRUEsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsRUFDQSxJQUNBLElBQ0EsR0FFQSxHQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxHQUVBLElBQ0EsSUFDQSxFQUNBLEVBQ0EsR0FDQSxHQUNBLEdBQ0EsR0FDQSxHQUNBLEdBRUEsR0FDQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsR0FFQSxHQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsR0FDQSxFQUNBLEVBQ0EsR0FDQSxNQUVGRCxNQUFPLElBQUlDLFdBQVcsQ0FDcEIsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUVBLEdBQ0EsR0FDQSxHQUNBLEdBQ0EsSUFFQSxJQUNBLEdBQ0EsSUFDQSxJQUNBLElBRUEsSUFDQSxHQUNBLElBQ0EsR0FDQSxJQUVBLElBQ0EsSUFDQSxJQUNBLEdBQ0EsR0FFQSxJQUNBLElBQ0EsSUFDQSxHQUNBLElBRUEsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUVBLElBQ0EsR0FDQSxHQUNBLEdBQ0EsR0FFQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBRUEsSUFDQSxJQUNBLElBQ0EsR0FDQSxJQUVBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFFQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBRUEsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUVBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFFQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBRUEsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUVBLEdBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUNBLEdBRUEsR0FDQSxHQUNBLEdBQ0EsR0FDQSxHQUNBLEdBQ0EsR0FDQSxHQUNBLEdBQ0EsR0FFQSxHQUNBLElBQ0EsSUFDQSxFQUNBLEdBQ0EsR0FDQSxHQUNBLEdBQ0EsSUFDQSxJQUVBLEdBQ0EsSUFDQSxJQUNBLEVBQ0EsR0FDQSxHQUNBLEVBQ0EsSUFDQSxJQUNBLEdBRUEsRUFDQSxHQUNBLEdBQ0EsR0FDQSxJQUNBLElBQ0EsSUFDQSxJQUNBLEVBQ0EsRUFFQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxFQUNBLElBQ0EsSUFDQSxHQUVBLEdBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUNBLEdBRUEsSUFDQSxJQUNBLEVBQ0EsRUFDQSxHQUNBLEdBQ0EsR0FDQSxHQUNBLEdBQ0EsR0FFQSxHQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxHQUVBLEdBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxHQUNBLEVBQ0EsRUFDQSxHQUNBLE1BRUZDLFNBQVUsSUFBSUQsV0FBVyxDQUN2QixHQUNBLElBQ0EsSUFDQSxJQUNBLEdBRUEsR0FDQSxHQUNBLEdBQ0EsR0FDQSxJQUVBLElBQ0EsR0FDQSxHQUNBLElBQ0EsSUFFQSxJQUNBLEdBQ0EsR0FDQSxHQUNBLElBRUEsSUFDQSxJQUNBLElBQ0EsR0FDQSxHQUVBLElBQ0EsSUFDQSxJQUNBLEdBQ0EsSUFFQSxHQUNBLElBQ0EsSUFDQSxJQUNBLEdBRUEsSUFDQSxHQUNBLEdBQ0EsR0FDQSxHQUVBLEdBQ0EsSUFDQSxHQUNBLElBQ0EsR0FFQSxHQUNBLElBQ0EsSUFDQSxHQUNBLEdBRUEsR0FDQSxJQUNBLElBQ0EsSUFDQSxJQUVBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFFQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBRUEsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUVBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFFQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBRUEsR0FDQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsSUFDQSxJQUNBLElBQ0EsR0FFQSxHQUNBLEdBQ0EsR0FDQSxHQUNBLEdBQ0EsR0FDQSxHQUNBLEdBQ0EsR0FDQSxHQUVBLEdBQ0EsSUFDQSxJQUNBLEVBQ0EsR0FDQSxHQUNBLEdBQ0EsR0FDQSxJQUNBLElBRUEsR0FDQSxJQUNBLElBQ0EsRUFDQSxHQUNBLEdBQ0EsRUFDQSxJQUNBLElBQ0Es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QTZCLFFBQXhCOEgsRUFBS2tFLEtBQUtyQyxRQUFRLEdBQ3JCLE9BQU9zQyxNQUFNLHVDQUNmak0sRUFBT2tNLEtBQUtsTSxFQUFLbU0sTUFBTSxLQUFLLElBQzVCLE1BQU1wSixFQUFVLElBQUlsRSxXQUFXLElBQUl1TixZQUFZcE0sRUFBS3NELFNBQ3BELElBQU0sSUFBSUYsRUFBSSxFQUFHQSxFQUFJcEQsRUFBS3NELE9BQVFGLElBQ2hDTCxFQUFRSyxHQUFLcEQsRUFBS3FNLFdBQVdqSixHQUMvQnZCLEVBQVNpQixZQWhDSyxFQWdDWUMsVSIsInNvdXJjZXMiOlsid2VicGFjazovL3NpbGljb244Ly4vc2hhcmVkL2ZvbnQuanMiLCJ3ZWJwYWNrOi8vc2lsaWNvbjgvLi9zaGFyZWQvdHlwZXMuanMiLCJ3ZWJwYWNrOi8vc2lsaWNvbjgvLi93ZWItY2xpZW50L2Rpc3BsYXkuanMiLCJ3ZWJwYWNrOi8vc2lsaWNvbjgvLi93ZWItY2xpZW50L2VtdWxhdG9yLmpzIiwid2VicGFjazovL3NpbGljb244Ly4vd2ViLWNsaWVudC9rZXlib2FyZC5qcyIsIndlYnBhY2s6Ly9zaWxpY29uOC8uL3dlYi1jbGllbnQvc291bmQuanMiLCJ3ZWJwYWNrOi8vc2lsaWNvbjgvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vc2lsaWNvbjgvLi9ub2RlX21vZHVsZXMvdGhpbWJsZWZ1bC9zcmMvY2xpY2suanMiLCJ3ZWJwYWNrOi8vc2lsaWNvbjgvLi9ub2RlX21vZHVsZXMvdGhpbWJsZWZ1bC9zcmMvZmlsZXRhcmdldC5qcyIsIndlYnBhY2s6Ly9zaWxpY29uOC8uL25vZGVfbW9kdWxlcy90aGltYmxlZnVsL3NyYy9yb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vc2lsaWNvbjgvLi9ub2RlX21vZHVsZXMvdGhpbWJsZWZ1bC9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2lsaWNvbjgvLi9ub2RlX21vZHVsZXMvdGhpbWJsZWZ1bC9zcmMvZW5lcmdpemUuanMiLCJ3ZWJwYWNrOi8vc2lsaWNvbjgvLi93ZWItY2xpZW50L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vc2hhcmVkL3R5cGVzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gdHlwZSA9PiB7XG4gIHN3aXRjaCh0eXBlKSB7XG4gICAgY2FzZSB0eXBlcy5WSVA6XG4gICAgY2FzZSB0eXBlcy5TVFJJQ1RWSVA6XG4gICAgY2FzZSB0eXBlcy5CTElORFZJUDpcbiAgICAgIHJldHVybiBmb250cy5jaGlwODtcbiAgICBjYXNlIHR5cGVzLlNDSElQOlxuICAgIGNhc2UgdHlwZXMuWE9DSElQOlxuICAgICAgcmV0dXJuIGZvbnRzLnNjaGlwO1xuICB9XG59O1xuXG5jb25zdCBmb250cyA9IHtcbiAgY2hpcDg6IG5ldyBVaW50OEFycmF5KFtcbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIxMDAxMDAwMCxcbiAgICAwYjEwMDEwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjAxMTAwMDAwLFxuICAgIDBiMDAxMDAwMDAsXG4gICAgMGIwMDEwMDAwMCxcbiAgICAwYjAwMTAwMDAwLFxuICAgIDBiMDExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMDAwMTAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjEwMDAwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMDAwMTAwMDAsXG4gICAgMGIwMTExMDAwMCxcbiAgICAwYjAwMDEwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjEwMTAwMDAwLFxuICAgIDBiMTAxMDAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjAwMTAwMDAwLFxuICAgIDBiMDAxMDAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjAwMDEwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjEwMDEwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMDAwMTAwMDAsXG4gICAgMGIwMDAxMDAwMCxcbiAgICAwYjAwMDEwMDAwLFxuICAgIDBiMDAwMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjEwMDEwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjAwMDEwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjEwMDEwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMDEwMTAwMDAsXG4gICAgMGIwMTExMDAwMCxcbiAgICAwYjAxMDEwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG4gICAgMGIxMDAwMDAwMCxcbiAgICAwYjEwMDAwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMDEwMTAwMDAsXG4gICAgMGIwMTAxMDAwMCxcbiAgICAwYjAxMDEwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjEwMDAwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjEwMDAwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG5cbiAgICAwYjAwMTExMTAwLFxuICAgIDBiMDExMTExMTAsXG4gICAgMGIxMTEwMDExMSxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMTEwMDAwMTEsXG4gICAgMGIxMTAwMDAxMSxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMTExMDAxMTEsXG4gICAgMGIwMTExMTExMCxcbiAgICAwYjAwMTExMTAwLFxuXG4gICAgMGIwMDAxMTAwMCxcbiAgICAwYjAwMTExMDAwLFxuICAgIDBiMDEwMTEwMDAsXG4gICAgMGIwMDAxMTAwMCxcbiAgICAwYjAwMDExMDAwLFxuICAgIDBiMDAwMTEwMDAsXG4gICAgMGIwMDAxMTAwMCxcbiAgICAwYjAwMDExMDAwLFxuICAgIDBiMDAwMTEwMDAsXG4gICAgMGIwMDExMTEwMCxcblxuICAgIDBiMDAxMTExMTAsXG4gICAgMGIwMTExMTExMSxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMDAwMDAxMTAsXG4gICAgMGIwMDAwMTEwMCxcbiAgICAwYjAwMDExMDAwLFxuICAgIDBiMDAxMTAwMDAsXG4gICAgMGIwMTEwMDAwMCxcbiAgICAwYjExMTExMTExLFxuICAgIDBiMTExMTExMTEsXG5cbiAgICAwYjAwMTExMTAwLFxuICAgIDBiMDExMTExMTAsXG4gICAgMGIxMTAwMDAxMSxcbiAgICAwYjAwMDAwMDExLFxuICAgIDBiMDAwMDExMTAsXG4gICAgMGIwMDAwMTExMCxcbiAgICAwYjAwMDAwMDExLFxuICAgIDBiMTEwMDAwMTEsXG4gICAgMGIwMTExMTExMCxcbiAgICAwYjAwMTExMTAwLFxuXG4gICAgMGIwMDAwMDExMCxcbiAgICAwYjAwMDAxMTEwLFxuICAgIDBiMDAwMTExMTAsXG4gICAgMGIwMDExMDExMCxcbiAgICAwYjAxMTAwMTEwLFxuICAgIDBiMTEwMDAxMTAsXG4gICAgMGIxMTExMTExMSxcbiAgICAwYjExMTExMTExLFxuICAgIDBiMDAwMDAxMTAsXG4gICAgMGIwMDAwMDExMCxcblxuICAgIDBiMTExMTExMTEsXG4gICAgMGIxMTExMTExMSxcbiAgICAwYjExMDAwMDAwLFxuICAgIDBiMTEwMDAwMDAsXG4gICAgMGIxMTExMTEwMCxcbiAgICAwYjExMTExMTEwLFxuICAgIDBiMDAwMDAwMTEsXG4gICAgMGIxMTAwMDAxMSxcbiAgICAwYjAxMTExMTEwLFxuICAgIDBiMDAxMTExMDAsXG5cbiAgICAwYjAwMTExMTEwLFxuICAgIDBiMDExMTExMDAsXG4gICAgMGIxMTEwMDAwMCxcbiAgICAwYjExMDAwMDAwLFxuICAgIDBiMTExMTExMDAsXG4gICAgMGIxMTExMTExMCxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMTEwMDAwMTEsXG4gICAgMGIwMTExMTExMCxcbiAgICAwYjAwMTExMTAwLFxuXG4gICAgMGIxMTExMTExMSxcbiAgICAwYjExMTExMTExLFxuICAgIDBiMDAwMDAwMTEsXG4gICAgMGIwMDAwMDExMCxcbiAgICAwYjAwMDAxMTAwLFxuICAgIDBiMDAwMTEwMDAsXG4gICAgMGIwMDExMDAwMCxcbiAgICAwYjAxMTAwMDAwLFxuICAgIDBiMDExMDAwMDAsXG4gICAgMGIwMTEwMDAwMCxcblxuICAgIDBiMDAxMTExMDAsXG4gICAgMGIwMTExMTExMCxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMTEwMDAwMTEsXG4gICAgMGIwMTExMTExMCxcbiAgICAwYjAxMTExMTEwLFxuICAgIDBiMTEwMDAwMTEsXG4gICAgMGIxMTAwMDAxMSxcbiAgICAwYjAxMTExMTEwLFxuICAgIDBiMDAxMTExMDAsXG5cbiAgICAwYjAwMTExMTAwLFxuICAgIDBiMDExMTExMTAsXG4gICAgMGIxMTAwMDAxMSxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMDExMTExMTEsXG4gICAgMGIwMDExMTExMSxcbiAgICAwYjAwMDAwMDExLFxuICAgIDBiMDAwMDAwMTEsXG4gICAgMGIwMDExMTExMCxcbiAgICAwYjAxMTExMTAwLFxuICBdKSxcbiAgc2NoaXA6IG5ldyBVaW50OEFycmF5KFtcbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIxMDAxMDAwMCxcbiAgICAwYjEwMDEwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjAwMTAwMDAwLFxuICAgIDBiMDExMDAwMDAsXG4gICAgMGIwMDEwMDAwMCxcbiAgICAwYjAwMTAwMDAwLFxuICAgIDBiMDExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMDAwMTAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjEwMDAwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMDAwMTAwMDAsXG4gICAgMGIwMTExMDAwMCxcbiAgICAwYjAwMDEwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjEwMDEwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjAwMDEwMDAwLFxuICAgIDBiMDAwMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjAwMDEwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjEwMDEwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMDAwMTAwMDAsXG4gICAgMGIwMDEwMDAwMCxcbiAgICAwYjAxMDAwMDAwLFxuICAgIDBiMDEwMDAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjEwMDEwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjAwMDEwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjEwMDEwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG5cbiAgICAwYjExMTAwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIxMTEwMDAwMCxcbiAgICAwYjEwMDEwMDAwLFxuICAgIDBiMTExMDAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG4gICAgMGIxMDAwMDAwMCxcbiAgICAwYjEwMDAwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTAwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIxMDAxMDAwMCxcbiAgICAwYjEwMDEwMDAwLFxuICAgIDBiMTExMDAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjEwMDAwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjEwMDAwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG5cbiAgICAwYjAwMTExMTAwLFxuICAgIDBiMDExMTExMTAsXG4gICAgMGIxMTEwMDExMSxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMTEwMDAwMTEsXG4gICAgMGIxMTAwMDAxMSxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMTExMDAxMTEsXG4gICAgMGIwMTExMTExMCxcbiAgICAwYjAwMTExMTAwLFxuXG4gICAgMGIwMDAxMTAwMCxcbiAgICAwYjAwMTExMDAwLFxuICAgIDBiMDEwMTEwMDAsXG4gICAgMGIwMDAxMTAwMCxcbiAgICAwYjAwMDExMDAwLFxuICAgIDBiMDAwMTEwMDAsXG4gICAgMGIwMDAxMTAwMCxcbiAgICAwYjAwMDExMDAwLFxuICAgIDBiMDAwMTEwMDAsXG4gICAgMGIwMDExMTEwMCxcblxuICAgIDBiMDAxMTExMTAsXG4gICAgMGIwMTExMTExMSxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMDAwMDAxMTAsXG4gICAgMGIwMDAwMTEwMCxcbiAgICAwYjAwMDExMDAwLFxuICAgIDBiMDAxMTAwMDAsXG4gICAgMGIwMTEwMDAwMCxcbiAgICAwYjExMTExMTExLFxuICAgIDBiMTExMTExMTEsXG5cbiAgICAwYjAwMTExMTAwLFxuICAgIDBiMDExMTExMTAsXG4gICAgMGIxMTAwMDAxMSxcbiAgICAwYjAwMDAwMDExLFxuICAgIDBiMDAwMDExMTAsXG4gICAgMGIwMDAwMTExMCxcbiAgICAwYjAwMDAwMDExLFxuICAgIDBiMTEwMDAwMTEsXG4gICAgMGIwMTExMTExMCxcbiAgICAwYjAwMTExMTAwLFxuXG4gICAgMGIwMDAwMDExMCxcbiAgICAwYjAwMDAxMTEwLFxuICAgIDBiMDAwMTExMTAsXG4gICAgMGIwMDExMDExMCxcbiAgICAwYjAxMTAwMTEwLFxuICAgIDBiMTEwMDAxMTAsXG4gICAgMGIxMTExMTExMSxcbiAgICAwYjExMTExMTExLFxuICAgIDBiMDAwMDAxMTAsXG4gICAgMGIwMDAwMDExMCxcblxuICAgIDBiMTExMTExMTEsXG4gICAgMGIxMTExMTExMSxcbiAgICAwYjExMDAwMDAwLFxuICAgIDBiMTEwMDAwMDAsXG4gICAgMGIxMTExMTEwMCxcbiAgICAwYjExMTExMTEwLFxuICAgIDBiMDAwMDAwMTEsXG4gICAgMGIxMTAwMDAxMSxcbiAgICAwYjAxMTExMTEwLFxuICAgIDBiMDAxMTExMDAsXG5cbiAgICAwYjAwMTExMTEwLFxuICAgIDBiMDExMTExMDAsXG4gICAgMGIxMTEwMDAwMCxcbiAgICAwYjExMDAwMDAwLFxuICAgIDBiMTExMTExMDAsXG4gICAgMGIxMTExMTExMCxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMTEwMDAwMTEsXG4gICAgMGIwMTExMTExMCxcbiAgICAwYjAwMTExMTAwLFxuXG4gICAgMGIxMTExMTExMSxcbiAgICAwYjExMTExMTExLFxuICAgIDBiMDAwMDAwMTEsXG4gICAgMGIwMDAwMDExMCxcbiAgICAwYjAwMDAxMTAwLFxuICAgIDBiMDAwMTEwMDAsXG4gICAgMGIwMDExMDAwMCxcbiAgICAwYjAxMTAwMDAwLFxuICAgIDBiMDExMDAwMDAsXG4gICAgMGIwMTEwMDAwMCxcblxuICAgIDBiMDAxMTExMDAsXG4gICAgMGIwMTExMTExMCxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMTEwMDAwMTEsXG4gICAgMGIwMTExMTExMCxcbiAgICAwYjAxMTExMTEwLFxuICAgIDBiMTEwMDAwMTEsXG4gICAgMGIxMTAwMDAxMSxcbiAgICAwYjAxMTExMTEwLFxuICAgIDBiMDAxMTExMDAsXG5cbiAgICAwYjAwMTExMTAwLFxuICAgIDBiMDExMTExMTAsXG4gICAgMGIxMTAwMDAxMSxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMDExMTExMTEsXG4gICAgMGIwMDExMTExMSxcbiAgICAwYjAwMDAwMDExLFxuICAgIDBiMDAwMDAwMTEsXG4gICAgMGIwMDExMTExMCxcbiAgICAwYjAxMTExMTAwLFxuICBdKSxcbiAgc2lsaWNvbjg6IG5ldyBVaW50OEFycmF5KFtcbiAgICAwYjAxMTAwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIxMDAxMDAwMCxcbiAgICAwYjEwMDEwMDAwLFxuICAgIDBiMDExMDAwMDAsXG5cbiAgICAwYjAwMTAwMDAwLFxuICAgIDBiMDExMDAwMDAsXG4gICAgMGIwMDEwMDAwMCxcbiAgICAwYjAwMTAwMDAwLFxuICAgIDBiMDExMTAwMDAsXG5cbiAgICAwYjExMTAwMDAwLFxuICAgIDBiMDAwMTAwMDAsXG4gICAgMGIwMTEwMDAwMCxcbiAgICAwYjEwMDAwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTAwMDAwLFxuICAgIDBiMDAwMTAwMDAsXG4gICAgMGIwMTEwMDAwMCxcbiAgICAwYjAwMDEwMDAwLFxuICAgIDBiMTExMDAwMDAsXG5cbiAgICAwYjEwMDAwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjAwMDEwMDAwLFxuICAgIDBiMDAwMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG4gICAgMGIxMTEwMDAwMCxcbiAgICAwYjAwMDEwMDAwLFxuICAgIDBiMTExMDAwMDAsXG5cbiAgICAwYjAxMTAwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG4gICAgMGIxMTEwMDAwMCxcbiAgICAwYjEwMDEwMDAwLFxuICAgIDBiMDExMDAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMDAwMTAwMDAsXG4gICAgMGIwMDEwMDAwMCxcbiAgICAwYjAxMDAwMDAwLFxuICAgIDBiMDEwMDAwMDAsXG5cbiAgICAwYjAxMTAwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIwMTEwMDAwMCxcbiAgICAwYjEwMDEwMDAwLFxuICAgIDBiMDExMDAwMDAsXG5cbiAgICAwYjAxMTAwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIwMTExMDAwMCxcbiAgICAwYjAwMDEwMDAwLFxuICAgIDBiMDExMDAwMDAsXG5cbiAgICAwYjAxMTAwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjEwMDEwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG5cbiAgICAwYjExMTAwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIxMTEwMDAwMCxcbiAgICAwYjEwMDEwMDAwLFxuICAgIDBiMTExMDAwMDAsXG5cbiAgICAwYjAxMTEwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG4gICAgMGIxMDAwMDAwMCxcbiAgICAwYjEwMDAwMDAwLFxuICAgIDBiMDExMTAwMDAsXG5cbiAgICAwYjExMTAwMDAwLFxuICAgIDBiMTAwMTAwMDAsXG4gICAgMGIxMDAxMDAwMCxcbiAgICAwYjEwMDEwMDAwLFxuICAgIDBiMTExMDAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjEwMDAwMDAwLFxuICAgIDBiMTExMTAwMDAsXG5cbiAgICAwYjExMTEwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG4gICAgMGIxMTExMDAwMCxcbiAgICAwYjEwMDAwMDAwLFxuICAgIDBiMTAwMDAwMDAsXG5cbiAgICAwYjAwMTExMTAwLFxuICAgIDBiMDExMTExMTAsXG4gICAgMGIxMTEwMDExMSxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMTEwMDAwMTEsXG4gICAgMGIxMTAwMDAxMSxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMTExMDAxMTEsXG4gICAgMGIwMTExMTExMCxcbiAgICAwYjAwMTExMTAwLFxuXG4gICAgMGIwMDAxMTAwMCxcbiAgICAwYjAwMTExMDAwLFxuICAgIDBiMDEwMTEwMDAsXG4gICAgMGIwMDAxMTAwMCxcbiAgICAwYjAwMDExMDAwLFxuICAgIDBiMDAwMTEwMDAsXG4gICAgMGIwMDAxMTAwMCxcbiAgICAwYjAwMDExMDAwLFxuICAgIDBiMDAwMTEwMDAsXG4gICAgMGIwMDExMTEwMCxcblxuICAgIDBiMDAxMTExMTAsXG4gICAgMGIwMTExMTExMSxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMDAwMDAxMTAsXG4gICAgMGIwMDAwMTEwMCxcbiAgICAwYjAwMDExMDAwLFxuICAgIDBiMDAxMTAwMDAsXG4gICAgMGIwMTEwMDAwMCxcbiAgICAwYjExMTExMTExLFxuICAgIDBiMTExMTExMTEsXG5cbiAgICAwYjAwMTExMTAwLFxuICAgIDBiMDExMTExMTAsXG4gICAgMGIxMTAwMDAxMSxcbiAgICAwYjAwMDAwMDExLFxuICAgIDBiMDAwMDExMTAsXG4gICAgMGIwMDAwMTExMCxcbiAgICAwYjAwMDAwMDExLFxuICAgIDBiMTEwMDAwMTEsXG4gICAgMGIwMTExMTExMCxcbiAgICAwYjAwMTExMTAwLFxuXG4gICAgMGIwMDAwMDExMCxcbiAgICAwYjAwMDAxMTEwLFxuICAgIDBiMDAwMTExMTAsXG4gICAgMGIwMDExMDExMCxcbiAgICAwYjAxMTAwMTEwLFxuICAgIDBiMTEwMDAxMTAsXG4gICAgMGIxMTExMTExMSxcbiAgICAwYjExMTExMTExLFxuICAgIDBiMDAwMDAxMTAsXG4gICAgMGIwMDAwMDExMCxcblxuICAgIDBiMTExMTExMTEsXG4gICAgMGIxMTExMTExMSxcbiAgICAwYjExMDAwMDAwLFxuICAgIDBiMTEwMDAwMDAsXG4gICAgMGIxMTExMTEwMCxcbiAgICAwYjExMTExMTEwLFxuICAgIDBiMDAwMDAwMTEsXG4gICAgMGIxMTAwMDAxMSxcbiAgICAwYjAxMTExMTEwLFxuICAgIDBiMDAxMTExMDAsXG5cbiAgICAwYjAwMTExMTEwLFxuICAgIDBiMDExMTExMDAsXG4gICAgMGIxMTEwMDAwMCxcbiAgICAwYjExMDAwMDAwLFxuICAgIDBiMTExMTExMDAsXG4gICAgMGIxMTExMTExMCxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMTEwMDAwMTEsXG4gICAgMGIwMTExMTExMCxcbiAgICAwYjAwMTExMTAwLFxuXG4gICAgMGIxMTExMTExMSxcbiAgICAwYjExMTExMTExLFxuICAgIDBiMDAwMDAwMTEsXG4gICAgMGIwMDAwMDExMCxcbiAgICAwYjAwMDAxMTAwLFxuICAgIDBiMDAwMTEwMDAsXG4gICAgMGIwMDExMDAwMCxcbiAgICAwYjAxMTAwMDAwLFxuICAgIDBiMDExMDAwMDAsXG4gICAgMGIwMTEwMDAwMCxcblxuICAgIDBiMDAxMTExMDAsXG4gICAgMGIwMTExMTExMCxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMTEwMDAwMTEsXG4gICAgMGIwMTExMTExMCxcbiAgICAwYjAxMTExMTEwLFxuICAgIDBiMTEwMDAwMTEsXG4gICAgMGIxMTAwMDAxMSxcbiAgICAwYjAxMTExMTEwLFxuICAgIDBiMDAxMTExMDAsXG5cbiAgICAwYjAwMTExMTAwLFxuICAgIDBiMDExMTExMTAsXG4gICAgMGIxMTAwMDAxMSxcbiAgICAwYjExMDAwMDExLFxuICAgIDBiMDExMTExMTEsXG4gICAgMGIwMDExMTExMSxcbiAgICAwYjAwMDAwMDExLFxuICAgIDBiMDAwMDAwMTEsXG4gICAgMGIwMDExMTExMCxcbiAgICAwYjAxMTExMTAwLFxuICBdKVxufTtcbiIsIm1vZHVsZS5leHBvcnRzID0ge1xuICBWSVA6ICAgICAgIDAsICAvLyBOb3RlIHRoYXQgdGhlc2UgdHdvIGhhbHQgZm9yIGRpc3BsYXkgcmVmcmVzaCwgdXNlIEJMSU5EVklQXG4gIFNUUklDVFZJUDogMSwgIC8vIGluc3RlYWQgZm9yIGhlYWRsZXNzIHRlc3RpbmdcbiAgU0NISVA6ICAgICAyLFxuICBYT0NISVA6ICAgIDMsXG4gIEJMSU5EVklQOiAgNFxufTtcbiIsImNvbnN0IGNhbnZhcyAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGlzcGxheScpO1xuY29uc3QgY29udGV4dCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuY2FudmFzLndpZHRoID0gNjQ7XG5jYW52YXMuaGVpZ2h0ID0gMzI7XG5cbm1vZHVsZS5leHBvcnRzID0gYnl0ZXMgPT4ge1xuICBjb25zdCBpbWFnZURhdGEgPSBjb250ZXh0LmNyZWF0ZUltYWdlRGF0YSg2NCwgMzIpO1xuICBmb3IgKCBsZXQgeSA9IDA7IHkgPCAzMjsgeSsrICkge1xuICAgIGZvciAoIGxldCB4ID0gMDsgeCA8IDY0OyB4KysgKSB7XG4gICAgICBjb25zdCBtZW1vcnlPZmZzZXQgID0gTWF0aC5mbG9vcih5ICogNjQgLyA4ICsgeCAvIDgpO1xuICAgICAgY29uc3QgcGl4ZWxPZmZzZXQgICA9IHggJSA4O1xuICAgICAgY29uc3QgZGlzcGxheU9mZnNldCA9IHkgKiA2NCAqIDQgKyB4ICogNDtcbiAgICAgIGltYWdlRGF0YS5kYXRhW2Rpc3BsYXlPZmZzZXQrMF0gPSBieXRlc1ttZW1vcnlPZmZzZXRdICYgKDBiMTAwMDAwMDAgPj4gcGl4ZWxPZmZzZXQpID8gMHhGRiA6IDB4MDA7XG4gICAgICBpbWFnZURhdGEuZGF0YVtkaXNwbGF5T2Zmc2V0KzFdID0gYnl0ZXNbbWVtb3J5T2Zmc2V0XSAmICgwYjEwMDAwMDAwID4+IHBpeGVsT2Zmc2V0KSA/IDB4QUEgOiAweDAwO1xuICAgICAgaW1hZ2VEYXRhLmRhdGFbZGlzcGxheU9mZnNldCsyXSA9IGJ5dGVzW21lbW9yeU9mZnNldF0gJiAoMGIxMDAwMDAwMCA+PiBwaXhlbE9mZnNldCkgPyAweDQ0IDogMHgwMDtcbiAgICAgIGltYWdlRGF0YS5kYXRhW2Rpc3BsYXlPZmZzZXQrM10gPSAweEREO1xuICAgIH1cbiAgfVxuICBjb250ZXh0LnB1dEltYWdlRGF0YShpbWFnZURhdGEsIDAsIDApO1xufTtcbiIsIi8vIFRoaXMgaXMganVzdCBhIHdyYXBwZXIgZm9yIGFsbCB0aGUgV2ViQXNzZW1ibHkgc3R1ZmYuXG5cbi8vIHJlcXVpcmUoJy4vd2FzbV9leGVjLmpzJyk7XG5jb25zdCBmb250ID0gcmVxdWlyZSgnLi4vc2hhcmVkL2ZvbnQnKTtcbmNvbnN0IGdvID0gbmV3IEdvKCk7XG5cbmlmICghV2ViQXNzZW1ibHkuaW5zdGFudGlhdGVTdHJlYW1pbmcpIHsgLy8gcG9seWZpbGxcbiAgV2ViQXNzZW1ibHkuaW5zdGFudGlhdGVTdHJlYW1pbmcgPSBhc3luYyAocmVzcCwgaW1wb3J0T2JqZWN0KSA9PiB7XG4gICAgY29uc3Qgc291cmNlID0gYXdhaXQgKGF3YWl0IHJlc3ApLmFycmF5QnVmZmVyKCk7XG4gICAgcmV0dXJuIGF3YWl0IFdlYkFzc2VtYmx5Lmluc3RhbnRpYXRlKHNvdXJjZSwgaW1wb3J0T2JqZWN0KTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjbGFzcyB7XG5cbiAgY29uc3RydWN0b3Ioe3BsYXlTb3VuZCwgc3RvcFNvdW5kLCByZW5kZXJ9KSB7XG4gICAgdGhpcy5fY3ljbGVzUGVyRnJhbWUgPSAzMDtcbiAgICB0aGlzLl9yZW5kZXIgPSByZW5kZXI7XG4gICAgcGxheVNvdW5kIHx8PSAoKSA9PiB7fTtcbiAgICBzdG9wU291bmQgfHw9ICgpID0+IHt9O1xuXG4gICAgT2JqZWN0LmFzc2lnbihnby5pbXBvcnRPYmplY3QuZW52LCB7XG4gICAgICAnbWFpbi5yYW5kb21CeXRlJzogKCkgPT4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMjU2KSAmIDB4RkYsXG4gICAgICAnbWFpbi5wbGF5U291bmQnOiAgcGxheVNvdW5kLFxuICAgICAgJ21haW4uc3RvcFNvdW5kJzogIHN0b3BTb3VuZFxuICAgIH0pO1xuICB9XG5cbiAgaW5pdCgpIHtcbiAgICByZXR1cm4gV2ViQXNzZW1ibHkuaW5zdGFudGlhdGVTdHJlYW1pbmcoZmV0Y2goXCJzaWxpY29uOC53YXNtXCIpLCBnby5pbXBvcnRPYmplY3QpXG4gICAgLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgIHRoaXMuX2NwdSA9IHJlc3VsdC5pbnN0YW5jZS5leHBvcnRzO1xuICAgICAgZ28ucnVuKHJlc3VsdC5pbnN0YW5jZSk7XG4gICAgICBjb25zdCBkaXNwbGF5ID0gbmV3IFVpbnQ4QXJyYXkodGhpcy5fY3B1Lm1lbW9yeS5idWZmZXIsIHRoaXMuX2NwdS5kaXNwbGF5UHRyKCksIHRoaXMuX2NwdS5kaXNwbGF5U2l6ZSgpKTtcblxuICAgICAgc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICB0aGlzLl9jcHUuY3ljbGVzKHRoaXMuX2N5Y2xlc1BlckZyYW1lKTtcbiAgICAgICAgaWYgKCB0aGlzLl9jcHUuc2NyZWVuRGlydHkoKSApIHtcbiAgICAgICAgICB0aGlzLl9yZW5kZXIoZGlzcGxheSk7XG4gICAgICAgICAgdGhpcy5fY3B1LnNldFNjcmVlbkNsZWFuKCk7XG4gICAgICAgIH1cbiAgICAgIH0sIDEwMDAgLyA2MCk7XG4gICAgfSlcbiAgICAuY2F0Y2goZSA9PiB7XG4gICAgICBjb25zb2xlLmVycm9yKGUpO1xuICAgIH0pO1xuICB9XG5cbiAgc2V0Q3ljbGVzUGVyRnJhbWUobmV3Q3ljbGVzKSB7XG4gICAgdGhpcy5fY3ljbGVzUGVyRnJhbWUgPSBuZXdDeWNsZXM7XG4gIH1cblxuICBsb2FkUHJvZ3JhbSh0eXBlLCBwcm9ncmFtKSB7XG4gICAgdGhpcy5fY3B1LmluaXRpYWxpemUodHlwZSk7XG4gICAgY29uc3QgcmFtID0gbmV3IFVpbnQ4QXJyYXkodGhpcy5fY3B1Lm1lbW9yeS5idWZmZXIsIHRoaXMuX2NwdS5yYW1QdHIoKSwgdGhpcy5fY3B1LnJhbVNpemUoKSk7XG4gICAgLy8gQ2xlYXIgUkFNXG4gICAgY29uc3QgcmFtU2l6ZSA9IHRoaXMuX2NwdS5yYW1TaXplKCk7XG4gICAgZm9yICggbGV0IGkgPSAwOyBpIDwgcmFtU2l6ZTsgaSsrICkgcmFtW2ldID0gMDtcbiAgICAvLyBMb2FkIGZvbnQgYW5kIHByb2dyYW0gaW50byBSQU1cbiAgICBjb25zdCBmb250RGF0YSA9IGZvbnQodHlwZSk7XG4gICAgZm9yICggbGV0IGkgPSAwOyBpIDwgZm9udERhdGEubGVuZ3RoOyBpKysgKSByYW1baV0gPSBmb250RGF0YVtpXTtcbiAgICBmb3IgKCBsZXQgaSA9IDB4MjAwOyBpIDwgMHgyMDAgKyBwcm9ncmFtLmxlbmd0aDsgaSsrICkgcmFtW2ldID0gcHJvZ3JhbVtpIC0gMHgyMDBdO1xuICB9XG5cbiAgZHVtcFN0YXR1cygpIHtcbiAgICB0aGlzLl9jcHUuZHVtcFN0YXR1cygpO1xuICB9XG5cbiAgcHJlc3NLZXkoa2V5KSB7XG4gICAgdGhpcy5fY3B1LnByZXNzS2V5KGtleSk7XG4gIH1cblxuICByZWxlYXNlS2V5KGtleSkge1xuICAgIHRoaXMuX2NwdS5yZWxlYXNlS2V5KGtleSk7XG4gIH1cblxufVxuIiwibW9kdWxlLmV4cG9ydHMgPSBpbnN0YW5jZSA9PiB7XG4gIGNvbnN0IGtleXMgPSB7XG4gICAgLy8gQXJyb3cga2V5c1xuICAgIDM4OiA1LCBcdFx0Ly8gdXBcbiAgICAzNzogNywgXHRcdC8vIGxlZnRcbiAgICAzOTogOSwgXHRcdC8vIHJpZ2h0XG4gICAgNDA6IDgsIFx0XHQvLyBkb3duXG5cbiAgICAvLyAxNiBrZXkgcGFkXG4gICAgNDk6IDEsXHRcdC8vIDFcbiAgICA1MDogMixcdFx0Ly8gMlxuICAgIDUxOiAzLFx0XHQvLyAzXG4gICAgNTI6ICdDJyxcdC8vIDRcbiAgICA4MTogNCwgXHRcdC8vIFFcbiAgICA4NzogNSwgXHRcdC8vIFdcbiAgICA2OTogNiwgXHRcdC8vIEVcbiAgICA4MjogJ0QnLCBcdC8vIFJcbiAgICA2NTogNywgXHRcdC8vIEFcbiAgICA4MzogOCwgXHRcdC8vIFNcbiAgICA2ODogOSwgXHRcdC8vIERcbiAgICA3MDogJ0UnLCBcdC8vIEZcbiAgICA5MDogJ0EnLCBcdC8vIFpcbiAgICA4ODogMCwgXHRcdC8vIFhcbiAgICA2NzogJ0InLCBcdC8vIENcbiAgICA4NjogJ0YnLCBcdC8vIFZcblxuICAgIC8vIE90aGVyIG51bWJlciBrZXlzXG4gICAgNDg6IDAsXG4gICAgNTM6IDUsXG4gICAgNTQ6IDYsXG4gICAgNTU6IDcsXG4gICAgNTY6IDgsXG4gICAgNTc6IDksXG4gIH07XG5cbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBlID0+IHtcbiAgICBpZiAoIGUua2V5Q29kZSA9PSAxMyAmJiBpbnN0YW5jZSApXG4gICAgICBpbnN0YW5jZS5kdW1wU3RhdHVzKCk7XG4gICAgaWYgKCBrZXlzW2Uua2V5Q29kZV0gJiYgaW5zdGFuY2UgKVxuICAgICAgaW5zdGFuY2UucHJlc3NLZXkoa2V5c1tlLmtleUNvZGVdKTtcbiAgfSk7XG5cbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgZSA9PiB7XG4gICAgaWYgKCBpbnN0YW5jZSApXG4gICAgICBpbnN0YW5jZS5yZWxlYXNlS2V5KGtleXNbZS5rZXlDb2RlXSk7XG4gIH0pO1xuXG59O1xuIiwibGV0IGdhaW5Ob2RlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcGxheVNvdW5kOiAoKSA9PiB7XG4gICAgc2V0Vm9sdW1lKDAuMSk7XG4gIH0sXG4gIHN0b3BTb3VuZDogKCkgPT4ge1xuICAgIHNldFZvbHVtZSgwKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gc2V0Vm9sdW1lKGdhaW4pIHtcbiAgLy8gU291bmQgbWF5IG9ubHkgcGxheSBhZnRlciBhIFwidXNlciBnZXN0dXJlXCIsIHNvIGRvIGl0IHRoaXMgd2F5OlxuICBpZiAoICFnYWluTm9kZSApIHNldHVwU291bmQoKTtcbiAgZ2Fpbk5vZGUuZ2Fpbi52YWx1ZSA9IGdhaW47XG59XG5cbmZ1bmN0aW9uIHNldHVwU291bmQoKSB7XG4gIGNvbnN0IGF1ZGlvQ3R4ID0gbmV3ICh3aW5kb3cuQXVkaW9Db250ZXh0IHx8IHdpbmRvdy53ZWJraXRBdWRpb0NvbnRleHQgfHwgd2luZG93LmF1ZGlvQ29udGV4dCk7XG5cbiAgY29uc3Qgb3NjaWxsYXRvciA9IGF1ZGlvQ3R4LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgZ2Fpbk5vZGUgPSBhdWRpb0N0eC5jcmVhdGVHYWluKCk7XG5cbiAgZ2Fpbk5vZGUuZ2Fpbi52YWx1ZSA9IDA7XG4gIG9zY2lsbGF0b3IuZnJlcXVlbmN5LnZhbHVlID0gNjAwO1xuICBvc2NpbGxhdG9yLnR5cGUgPSAndHJpYW5nbGUnO1xuXG4gIG9zY2lsbGF0b3IuY29ubmVjdChnYWluTm9kZSk7XG4gIGdhaW5Ob2RlLmNvbm5lY3QoYXVkaW9DdHguZGVzdGluYXRpb24pO1xuXG4gIG9zY2lsbGF0b3Iuc3RhcnQoKTtcbn1cbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvKlxuICogVGhpcyBjbGFzcyBpbnN0YWxscyBvbmUgc2luZ2xlIGNsaWNrIGhhbmRsZXIgb24gdGhlIHdob2xlIGRvY3VtZW50LCBhbmRcbiAqIGV2YWx1YXRlcyB3aGljaCBjYWxsYmFjayB0byBjYWxsIGF0IGNsaWNrIHRpbWUsIGJhc2VkIG9uIHRoZSBlbGVtZW50IHRoYXQgaGFzXG4gKiBiZWVuIGNsaWNrZWQuIFRoaXMgYWxsb3dzIHVzIHRvIHN3YXAgb3V0IGFuZCByZXJlbmRlciB3aG9sZSBzZWN0aW9ucyBvZiB0aGVcbiAqIERPTSB3aXRob3V0IGhhdmluZyB0byByZWluc3RhbGwgYSBidW5jaCBvZiBjbGljayBoYW5kbGVycyBlYWNoIHRpbWUuIFRoaXNcbiAqIG5pY2VseSBkZWNvdXBsZXMgdGhlIHJlbmRlciBsb2dpYyBmcm9tIHRoZSBjbGljayBldmVudCBtYW5hZ2VtZW50IGxvZ2ljLlxuICpcbiAqIFRvIG1ha2Ugc3VyZSB3ZSByZWFsbHkgb25seSBpbnN0YWxsIGEgc2luZ2xlIGNsaWNrIGhhbmRsZXIsIHlvdSBjYW4gdXNlIHRoZVxuICogc2luZ2xldG9uIHBhdHRlcm4gYW5kIGFzayBmb3IgYENsaWNrLmluc3RhbmNlKClgIGluc3RlYWQgb2YgY3JlYXRpbmcgYSBuZXdcbiAqIG9iamVjdC5cbiAqL1xuXG5jbGFzcyBDbGljayB7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5faGFuZGxlcnMgPSB7fTtcblxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgICAgIChlKSA9PiB0aGlzLl9jYWxsSGFuZGxlcignY2xpY2snLCAgICAgZSkpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIChlKSA9PiB0aGlzLl9jYWxsSGFuZGxlcignbW91c2Vkb3duJywgZSkpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCAgIChlKSA9PiB0aGlzLl9jYWxsSGFuZGxlcignbW91c2V1cCcsICAgZSkpO1xuICB9XG5cbiAgcmVnaXN0ZXIoc2VsZWN0b3IsIGhhbmRsZXJzID0ge2NsaWNrOiBudWxsLCBtb3VzZWRvd246IG51bGwsIG1vdXNldXA6IG51bGx9KSB7XG4gICAgaWYgKHR5cGVvZiBoYW5kbGVycyA9PSAnZnVuY3Rpb24nKSBoYW5kbGVycyA9IHsgY2xpY2s6IGhhbmRsZXJzIH07XG4gICAgdGhpcy5faGFuZGxlcnNbc2VsZWN0b3JdID0gdGhpcy5faGFuZGxlcnNbc2VsZWN0b3JdIHx8IFtdO1xuICAgIHRoaXMuX2hhbmRsZXJzW3NlbGVjdG9yXS5wdXNoKGhhbmRsZXJzKTtcbiAgfVxuXG4gIF9jYWxsSGFuZGxlcih0eXBlLCBlKSB7XG4gICAgT2JqZWN0LmtleXModGhpcy5faGFuZGxlcnMpLmZvckVhY2goKHNlbGVjdG9yKSA9PiB7XG4gICAgICBpZiAoZS50YXJnZXQuY2xvc2VzdChzZWxlY3RvcikgIT09IG51bGwpIHtcbiAgICAgICAgY29uc3QgaGFuZGxlcnMgPSB0aGlzLl9oYW5kbGVyc1tzZWxlY3Rvcl0ubWFwKChoKSA9PiBoW3R5cGVdKTtcbiAgICAgICAgaGFuZGxlcnMuZm9yRWFjaCgoaGFuZGxlcikgPT4ge1xuICAgICAgICAgIGlmICh0eXBlb2YgaGFuZGxlciA9PSAnZnVuY3Rpb24nICYmICFlLmRlZmF1bHRQcmV2ZW50ZWQpXG4gICAgICAgICAgICBoYW5kbGVyKGUsIHNlbGVjdG9yKVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG59XG5cbkNsaWNrLmluc3RhbmNlID0gZnVuY3Rpb24oKSB7XG4gIGlmICghIUNsaWNrLl9pbnN0YW5jZSkgcmV0dXJuIENsaWNrLl9pbnN0YW5jZTtcbiAgcmV0dXJuIENsaWNrLl9pbnN0YW5jZSA9IG5ldyBDbGljaygpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBDbGljaztcbiIsIi8qXG4gKiBUaGlzIGNsYXNzIGluc3RhbGxzIHNpbmdsZSBkcmFnIGV2ZW50IGhhbmRsZXJzIG9uIHRoZSB3aG9sZSBkb2N1bWVudCwgYW5kXG4gKiBldmFsdWF0ZXMgd2hpY2ggZWxlbWVudCB0aGV5IGluZmx1ZW5jZSBhdCBkcmFnIHRpbWUuIElmIHlvdSBkcm9wIGEgZmlsZSB0aGVcbiAqIHJlbGV2YW50IGNhbGxiYWNrIGdldHMgY2FsbGVkLCBiYXNlZCBvbiB0aGUgZWxlbWVudCB0aGF0IHRoZSBmaWxlIHdhcyBkcm9wcGVkXG4gKiBvbi4gVGhpcyBhbGxvd3MgdXMgdG8gc3dhcCBvdXQgYW5kIHJlcmVuZGVyIHdob2xlIHNlY3Rpb25zIG9mIHRoZSBET00gd2l0aG91dFxuICogaGF2aW5nIHRvIHJlaW5zdGFsbCBhIGJ1bmNoIG9mIGV2ZW50IGhhbmRsZXJzIGVhY2ggdGltZS4gVGhpcyBuaWNlbHlcbiAqIGRlY291cGxlcyB0aGUgcmVuZGVyIGxvZ2ljIGZyb20gdGhlIGRyYWcgZXZlbnQgbWFuYWdlbWVudCBsb2dpYy5cbiAqXG4gKiBUbyBtYWtlIHN1cmUgd2UgcmVhbGx5IG9ubHkgaW5zdGFsbCBzaW5nbGUgaGFuZGxlcnMsIHlvdSBjYW4gdXNlIHRoZVxuICogc2luZ2xldG9uIHBhdHRlcm4gYW5kIGFzayBmb3IgYEZpbGVUYXJnZXQuaW5zdGFuY2UoKWAgaW5zdGVhZCBvZiBjcmVhdGluZyBhIG5ld1xuICogb2JqZWN0LlxuICovXG5cbmltcG9ydCBDbGljayBmcm9tICcuL2NsaWNrJztcblxuY2xhc3MgRmlsZVRhcmdldCB7XG5cbiAgY29uc3RydWN0b3IoZHJhZ0NsYXNzID0gJ2RyYWdnaW5nJykge1xuICAgIHRoaXMuX2RyYWdDbGFzcyA9IGRyYWdDbGFzcztcbiAgICB0aGlzLl9oYW5kbGVycyAgPSB7fTtcblxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdvdmVyJywgIChlKSA9PiB0aGlzLl9kcmFnT3ZlcihlKSk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ2xlYXZlJywgKGUpID0+IHRoaXMuX2RyYWdMZWF2ZShlKSk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignZHJvcCcsICAgICAgKGUpID0+IHRoaXMuX2Ryb3AoZSkpO1xuICB9XG5cbiAgcmVnaXN0ZXIoc2VsZWN0b3IsIGNhbGxiYWNrKSB7XG4gICAgdGhpcy5faGFuZGxlcnNbc2VsZWN0b3JdID0gY2FsbGJhY2s7XG4gICAgQ2xpY2suaW5zdGFuY2UoKS5yZWdpc3RlcihzZWxlY3RvciwgKGUsIHMpID0+IHRoaXMuX29wZW5GaWxlRGlhbG9nKGUsIHMpKTtcbiAgfVxuXG4gIF9kcmFnT3ZlcihlKSB7XG4gICAgaWYgKCF0aGlzLl9pc0Ryb3BUYXJnZXQoZS50YXJnZXQpKSByZXR1cm47XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgZS5kYXRhVHJhbnNmZXIuZHJvcEVmZmVjdCA9ICdjb3B5JztcbiAgICBlLnRhcmdldC5jbGFzc0xpc3QuYWRkKHRoaXMuX2RyYWdDbGFzcyk7XG4gIH1cblxuICBfZHJhZ0xlYXZlKGUpIHtcbiAgICBpZiAoIXRoaXMuX2lzRHJvcFRhcmdldChlLnRhcmdldCkpIHJldHVybjtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBlLnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2RyYWdDbGFzcyk7XG4gIH1cblxuICBfZHJvcChlKSB7XG4gICAgbGV0IHNlbGVjdG9yID0gdGhpcy5faXNEcm9wVGFyZ2V0KGUudGFyZ2V0KTtcbiAgICBpZiAoIXNlbGVjdG9yKSByZXR1cm47XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgZS50YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9kcmFnQ2xhc3MpO1xuICAgIHRoaXMuX2hhbmRsZUZpbGUoc2VsZWN0b3IsIGUsIGUuZGF0YVRyYW5zZmVyLmZpbGVzWzBdKTtcbiAgfVxuXG4gIF9pc0Ryb3BUYXJnZXQodGFyZ2V0KSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuX2hhbmRsZXJzKS5maW5kKChzZWxlY3RvcikgPT4ge1xuICAgICAgaWYgKHRhcmdldC5jbG9zZXN0KHNlbGVjdG9yKSkgcmV0dXJuIHNlbGVjdG9yO1xuICAgIH0pIHx8IGZhbHNlO1xuICB9XG5cbiAgX29wZW5GaWxlRGlhbG9nKGUsIHNlbGVjdG9yKSB7XG4gICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIGlucHV0LnR5cGUgID0gJ2ZpbGUnO1xuICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChjKSA9PlxuICAgICAgdGhpcy5faGFuZGxlRmlsZShzZWxlY3RvciwgZSwgYy50YXJnZXQuZmlsZXNbMF0pXG4gICAgKTtcbiAgICBpbnB1dC5jbGljaygpO1xuICB9XG5cbiAgX2hhbmRsZUZpbGUoc2VsZWN0b3IsIGUsIGZpbGUpIHtcbiAgICB0aGlzLl9yZWFkRmlsZShmaWxlKVxuICAgICAgICAudGhlbigocikgPT4gdGhpcy5faGFuZGxlcnNbc2VsZWN0b3JdKGZpbGUsIHIsIGUpKTtcbiAgfVxuXG4gIF9yZWFkRmlsZShmaWxlKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgICAgcmVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoZSkgPT4gcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpKTtcbiAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xuICAgIH0pO1xuICB9XG5cbn1cblxuRmlsZVRhcmdldC5pbnN0YW5jZSA9IGZ1bmN0aW9uKCkge1xuICBpZiAoISFGaWxlVGFyZ2V0Ll9pbnN0YW5jZSkgcmV0dXJuIEZpbGVUYXJnZXQuX2luc3RhbmNlO1xuICByZXR1cm4gRmlsZVRhcmdldC5faW5zdGFuY2UgPSBuZXcgRmlsZVRhcmdldCgpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBGaWxlVGFyZ2V0O1xuIiwiLyoqXG4gKiBUaGlzIGlzIGEgdmVyeSBzaW1wbGUgcm91dGluZyBjbGFzcyB0aGF0IGxpc3RlbnMgdG8gbG9jYXRpb24gaGFzaCBjaGFuZ2VzIGFuZFxuICogY2xpY2tzIG9uIGxpbmtzIHRvIHJlZ2lzdGVyZWQgcm91dGVzLlxuICpcbiAqIFlvdSBoYXZlIHRvIGV4cGxpY2l0bHkgZGVmaW5lIHRoZSByb3V0ZXMgdGhhdCB5b3Ugd2lzaCB0byB1c2UsIHNvIHdlIGRvbid0XG4gKiBjbGFzaCAodG9vIG11Y2gpIHdpdGggZGVlcC1saW5raW5nIHRvIG5hbWVkIGFuY2hvcnMgb24geW91ciBwYWdlLiBBbmQgYWxzb1xuICogYmVjYXVzZSBpdCBlbmFibGVzIHlvdSB0byBoYW5kbGUgZGlmZmVyZW50IHJvdXRlcyB3aXRoIGRpZmZlcmVudCBmdW5jdGlvbnMuXG4gKi9cblxuaW1wb3J0IENsaWNrIGZyb20gJy4vY2xpY2snO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSb3V0ZXIge1xuXG4gIGNvbnN0cnVjdG9yKHJvdXRlcyA9IGZhbHNlLCBoYW5kbGVyID0gbnVsbCkge1xuICAgIHRoaXMuX3JvdXRlcyA9IFtdO1xuICAgIGlmIChyb3V0ZXMpIHRoaXMuYWRkUm91dGVzKHJvdXRlcywgaGFuZGxlcik7XG4gIH1cblxuICBpbnN0YWxsKCkge1xuICAgIENsaWNrLmluc3RhbmNlKCkucmVnaXN0ZXIoJ2FbaHJlZl0nLCAgKGUpID0+IHRoaXMuX2hhbmRsZUNsaWNrKGUpKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignaGFzaGNoYW5nZScsIChlKSA9PiB0aGlzLl9oYW5kbGVOYXZpZ2F0aW9uRXZlbnQoZSkpO1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgICAgICAgKGUpID0+IHRoaXMuX2hhbmRsZU5hdmlnYXRpb25FdmVudChlKSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBhZGRSb3V0ZShyb3V0ZSwgaGFuZGxlcikge1xuICAgIHRoaXMuX3JvdXRlcy5wdXNoKFtyb3V0ZSwgaGFuZGxlcl0pO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgYWRkUm91dGVzKHJvdXRlcywgaGFuZGxlciA9IG51bGwpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShyb3V0ZXMpKVxuICAgICAgcm91dGVzLmZvckVhY2goKHJvdXRlKSA9PiB0aGlzLmFkZFJvdXRlKHJvdXRlLCBoYW5kbGVyKSk7XG4gICAgZWxzZVxuICAgICAgT2JqZWN0LmtleXMocm91dGVzKS5mb3JFYWNoKHJvdXRlID0+IHRoaXMuYWRkUm91dGUocm91dGUsIHJvdXRlc1tyb3V0ZV0pKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHJvdXRlKHJvdXRlLCBldm50KSB7XG4gICAgY29uc3QgbWF0Y2ggPSB0aGlzLl9tYXRjaGluZ1JvdXRlKHJvdXRlKTtcbiAgICBpZiAobWF0Y2ggJiYgbWF0Y2gucm91dGVyKSAgcmV0dXJuIG1hdGNoLnJvdXRlci5yb3V0ZShtYXRjaC5zdWJwYXRoLCBldm50KTtcbiAgICBpZiAobWF0Y2ggJiYgbWF0Y2guaGFuZGxlcikgcmV0dXJuIG1hdGNoLmhhbmRsZXIobWF0Y2gucm91dGUsIG1hdGNoLm1hdGNoZXMsIGV2bnQpO1xuICB9XG5cbiAgX2hhbmRsZUNsaWNrKGV2bnQpIHtcbiAgICBsZXQgbGluayA9IGV2bnQudGFyZ2V0LmdldEF0dHJpYnV0ZSgnaHJlZicpO1xuICAgIGlmICghbGluay5zdGFydHNXaXRoKCcjJykpIHJldHVybjsgICAgICAgLy8gT25seSBoYW5kbGUgaGFzaCBsaW5rc1xuICAgIGxpbmsgPSBsaW5rLnN1YnN0cigxKTtcbiAgICBpZiAoIXRoaXMuX21hdGNoaW5nUm91dGUobGluaykpIHJldHVybjsgIC8vIE9ubHkgaGFuZGxlIHJlZ2lzdGVyZWQgcm91dGVzXG4gICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBsaW5rO1xuICAgIGV2bnQucHJldmVudERlZmF1bHQoKTsgICAgICAgICAgICAgICAgICAgLy8gUHJldmVudCBmcm9tIGp1bXBpbmcgdG8gYW5jaG9yXG4gIH1cblxuICBfaGFuZGxlTmF2aWdhdGlvbkV2ZW50KGV2bnQpIHtcbiAgICBsZXQgaGFzaCA9IHdpbmRvdy5sb2NhdGlvbi5oYXNoXG4gICAgaWYgKGhhc2guc3RhcnRzV2l0aCgnIycpKSBoYXNoID0gaGFzaC5zdWJzdHIoMSk7XG4gICAgdGhpcy5yb3V0ZShoYXNoLCBldm50KTtcbiAgfVxuXG4gIF9tYXRjaGluZ1JvdXRlKHJvdXRlKSB7XG4gICAgcmV0dXJuIHJvdXRlICYmICggdGhpcy5fc3ViUm91dGVyTWF0Y2gocm91dGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgdGhpcy5fc3RyaW5nTWF0Y2gocm91dGUpICAgIHx8XG4gICAgICAgICAgICAgICAgICAgICAgdGhpcy5fcmVnRXhwTWF0Y2gocm91dGUpICAgICAgICk7XG4gIH1cblxuICBfc3ViUm91dGVyTWF0Y2gocm91dGUpIHtcbiAgICBjb25zdCBtYXRjaCA9IHRoaXMuX3JvdXRlcy5maWx0ZXIociA9PiByWzFdIGluc3RhbmNlb2YgUm91dGVyKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpbmQociA9PiByb3V0ZS5zdGFydHNXaXRoKHJbMF0gKyAnLycpIHx8IHJvdXRlID09IHJbMF0pO1xuXG4gICAgcmV0dXJuIG1hdGNoICYmIHtcbiAgICAgIHJvdXRlcjogIG1hdGNoWzFdLFxuICAgICAgc3VicGF0aDogcm91dGUuc3Vic3RyKG1hdGNoWzBdLmxlbmd0aCArIDEpXG4gICAgfTtcbiAgfVxuXG4gIF9zdHJpbmdNYXRjaChyb3V0ZSkge1xuICAgIGNvbnN0IG1hdGNoID0gdGhpcy5fcm91dGVzLmZpbmQociA9PiByb3V0ZSA9PSByWzBdKTtcblxuICAgIHJldHVybiBtYXRjaCAmJiB7XG4gICAgICByb3V0ZTogICBtYXRjaFswXSxcbiAgICAgIGhhbmRsZXI6IG1hdGNoWzFdXG4gICAgfTtcbiAgfVxuXG4gIF9yZWdFeHBNYXRjaChyb3V0ZSkge1xuICAgIGNvbnN0IG1hdGNoID0gdGhpcy5fcm91dGVzLmZpbHRlcihyID0+IHJbMF0gaW5zdGFuY2VvZiBSZWdFeHApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZmluZChyID0+IHJvdXRlLm1hdGNoKHJbMF0pKTtcblxuICAgIHJldHVybiBtYXRjaCAmJiB7XG4gICAgICByb3V0ZTogICBtYXRjaFswXSxcbiAgICAgIGhhbmRsZXI6IG1hdGNoWzFdLFxuICAgICAgbWF0Y2hlczogcm91dGUubWF0Y2gobWF0Y2hbMF0pXG4gICAgfTtcbiAgfVxuXG59XG4iLCJpbXBvcnQgQ2xpY2sgICAgICBmcm9tICcuL2NsaWNrJztcbmltcG9ydCBGaWxlVGFyZ2V0IGZyb20gJy4vZmlsZXRhcmdldCc7XG5pbXBvcnQgUm91dGVyICAgICBmcm9tICcuL3JvdXRlcic7XG5pbXBvcnQgRW5lcmdpemUgICBmcm9tICcuL2VuZXJnaXplJztcblxuY29uc3QgVGhpbWJsZWZ1bCA9IHtcbiAgQ2xpY2ssIEZpbGVUYXJnZXQsIFJvdXRlciwgRW5lcmdpemVcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFRoaW1ibGVmdWw7XG53aW5kb3cuVGhpbWJsZWZ1bCA9IFRoaW1ibGVmdWw7XG4iLCIvKipcbiAqIEdpdmVuIGEgc2NvcGUgdGhpcyBjbGFzcyBhZGRzIGEgYnVuY2ggb2YgYmVoYXZpb3VyIHRvIGVsZW1lbnRzIHRoYXRcbiAqIHlvdSBkZWZpbmUgdGhyb3VnaCBkYXRhIGF0dHJpYnV0ZXMuIFRoaXMgYmVoYXZpb3VyIGlzIGJhc2VkIGFyb3VuZCBhZGRpbmdcbiAqIG9yIHJlbW92aW5nIGFuICdhY3RpdmUnIGNsYXNzIHdoZW4gZWxlbWVudHMgYXJlIGNsaWNrZWQ6XG4gKlxuICogIC0gZGF0YS1vcGVuIOKAlCBBIHNlbGVjdG9yIHRvIHB1dCB0aGUgJ2FjdGl2ZScgY2xhc3Mgb24gd2hlbiBjbGlja2VkXG4gKiAgLSBkYXRhLWNsb3NlIOKAlCBBIHNlbGVjdG9yIHRvIHJlbW92ZSB0aGUgJ2FjdGl2ZScgY2xhc3MgZnJvbSB3aGVuIGNsaWNrZWRcbiAqICAtIGRhdGEtdG9nZ2xlIOKAlCBBIHNlbGVjdG9yIHRvIHRvZ2dsZSB0aGUgJ2FjdGl2ZScgY2xhc3Mgb24gd2hlbiBjbGlja2VkXG4gKiAgLSBkYXRhLWdyb3VwIOKAlCBJZiBJIGdldCB0aGUgJ2FjdGl2ZScgY2xhc3MsIHJlbW92ZSBpdCBmcm9tIG90aGVycyBpbiBteSBncm91cFxuICogIC0gZGF0YS10aW1lciDigJQgSWYgSSBnZXQgdGhlICdhY3RpdmUnIGNsYXNzLCByZW1vdmUgaXQgYWdhaW4gYWZ0ZXIgdGhpcyBtYW55IG1pbGxpc2Vjb25kc1xuICogIC0gZGF0YS1mb2xsb3dlciDigJQgQSBzZWxlY3RvciBmb3IgYW5vdGhlciBlbGVtZW50IHRoYXQgZm9sbG93cyBteSBiZWhhdmlvdXJcbiAqXG4gKiBJZiB5b3Ugd2lzaCwgeW91IGNhbiBvdmVycmlkZSB0aGUgY2xhc3MgbmFtZSBhbmQgdGhlIG5hbWVzIG9mIGFsbCB0aGVcbiAqIGF0dHJpYnV0ZXMgYXMgb3B0aW9ucyB0byB0aGUgY29uc3RydWN0b3IuXG4gKi9cblxuaW1wb3J0IENsaWNrIGZyb20gJy4vY2xpY2snO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbmVyZ2l6ZSB7XG5cbiAgY29uc3RydWN0b3Ioc2NvcGUsIG9wdGlvbnMgPSB7fSkge1xuICAgIHRoaXMuX3Njb3BlICAgPSBzY29wZTtcbiAgICB0aGlzLl9vcHRpb25zID0gdGhpcy5fbm9ybWFsaXplT3B0aW9ucyhvcHRpb25zKTtcblxuICAgIENsaWNrLmluc3RhbmNlKCkucmVnaXN0ZXIoYCR7c2NvcGV9IFske3RoaXMuX29wdGlvbnMub3Blbn1dLCAke3Njb3BlfSBbJHt0aGlzLl9vcHRpb25zLmNsb3NlfV0sICR7c2NvcGV9IFske3RoaXMuX29wdGlvbnMudG9nZ2xlfV1gLCAoZSkgPT4gdGhpcy5faGFuZGxlQ2xpY2soZSkpO1xuICB9XG5cbiAgX25vcm1hbGl6ZU9wdGlvbnMob3B0aW9ucykge1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHtcbiAgICAgIGNsYXNzOiAgICAnYWN0aXZlJyxcbiAgICAgIG9wZW46ICAgICAnZGF0YS1vcGVuJyxcbiAgICAgIGNsb3NlOiAgICAnZGF0YS1jbG9zZScsXG4gICAgICB0b2dnbGU6ICAgJ2RhdGEtdG9nZ2xlJyxcbiAgICAgIGdyb3VwOiAgICAnZGF0YS1ncm91cCcsXG4gICAgICB0aW1lcjogICAgJ2RhdGEtdGltZXInLFxuICAgICAgZm9sbG93ZXI6ICdkYXRhLWZvbGxvd2VyJ1xuICAgIH0sIG9wdGlvbnMpO1xuICB9XG5cbiAgX2hhbmRsZUNsaWNrKGV2bnQpIHtcbiAgICAvLyBXaGljaCBlbGVtZW50IGRpZCB3ZSBjbGljaz9cbiAgICBjb25zdCB0YXJnZXQgPSBldm50LnRhcmdldC5jbG9zZXN0KGBbJHt0aGlzLl9vcHRpb25zLm9wZW59XSwgWyR7dGhpcy5fb3B0aW9ucy5jbG9zZX1dLCBbJHt0aGlzLl9vcHRpb25zLnRvZ2dsZX1dYCk7XG5cbiAgICAvLyBXaGF0IGRvZXMgdGhlIGNsaWNrZWQgZWxlbWVudCB3aXNoIHRvIG9wZW4sIGNsb3NlIG9yIHRvZ2dsZT9cbiAgICBjb25zdCBjbG9zZVNlbGVjdG9yICA9IHRhcmdldC5nZXRBdHRyaWJ1dGUodGhpcy5fb3B0aW9ucy5jbG9zZSk7XG4gICAgY29uc3Qgb3BlblNlbGVjdG9yICAgPSB0YXJnZXQuZ2V0QXR0cmlidXRlKHRoaXMuX29wdGlvbnMub3Blbik7XG4gICAgY29uc3QgdG9nZ2xlU2VsZWN0b3IgPSB0YXJnZXQuZ2V0QXR0cmlidXRlKHRoaXMuX29wdGlvbnMudG9nZ2xlKTtcblxuICAgIGxldCBjbG9zZUVsZW1lbnRzID0gY2xvc2VTZWxlY3RvciA/IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYCR7dGhpcy5fc2NvcGV9ICR7Y2xvc2VTZWxlY3Rvcn1gKSAgOiBbXTtcbiAgICBsZXQgb3BlbkVsZW1lbnRzICA9ICBvcGVuU2VsZWN0b3IgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGAke3RoaXMuX3Njb3BlfSAke29wZW5TZWxlY3Rvcn1gKSAgIDogW107XG5cbiAgICAvLyBBZGQgZWxlbWVudHMgdGhhdCBuZWVkIHRvIGJlIHRvZ2dsZWRcbiAgICBjbG9zZUVsZW1lbnRzID0gWy4uLmNsb3NlRWxlbWVudHMsIC4uLih0b2dnbGVTZWxlY3RvciA/IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYCR7dGhpcy5fc2NvcGV9ICR7dG9nZ2xlU2VsZWN0b3J9LiR7dGhpcy5fb3B0aW9ucy5jbGFzc31gKSAgICAgICA6IFtdKV07XG4gICAgb3BlbkVsZW1lbnRzICA9IFsuLi5vcGVuRWxlbWVudHMsICAuLi4odG9nZ2xlU2VsZWN0b3IgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGAke3RoaXMuX3Njb3BlfSAke3RvZ2dsZVNlbGVjdG9yfTpub3QoLiR7dGhpcy5fb3B0aW9ucy5jbGFzc30pYCkgOiBbXSldO1xuXG4gICAgdGhpcy5fY2xvc2UoY2xvc2VFbGVtZW50cyk7XG4gICAgdGhpcy5fb3BlbihvcGVuRWxlbWVudHMpO1xuXG4gICAgLy8gV2UncmUgZG9uZSB3aXRoIHRoaXMgZXZlbnQsIGRvbid0IHRyeSB0byBldmFsdWF0ZSBpdCBhbnkgZnVydGhlclxuICAgIGV2bnQucHJldmVudERlZmF1bHQoKTtcbiAgICBldm50LnN0b3BQcm9wYWdhdGlvbigpO1xuICB9XG5cbiAgX2Nsb3NlKGVsZW1lbnRzKSB7XG4gICAgZWxlbWVudHMuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuICAgICAgZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX29wdGlvbnMuY2xhc3MpO1xuICAgICAgdGhpcy5fY2xvc2UodGhpcy5fZm9sbG93ZXJzKGVsZW1lbnQpKTtcbiAgICB9KTtcbiAgfVxuXG4gIF9vcGVuKGVsZW1lbnRzKSB7XG4gICAgZWxlbWVudHMuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuICAgICAgdGhpcy5fY2xvc2UodGhpcy5fZ3JvdXAoZWxlbWVudCkpO1xuICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX29wdGlvbnMuY2xhc3MpO1xuICAgICAgdGhpcy5fb3Blbih0aGlzLl9mb2xsb3dlcnMoZWxlbWVudCkpO1xuXG4gICAgICAvLyBTZXQgc2VsZi1kZXN0cnVjdCB0aW1lciBpZiBuZWVkZWRcbiAgICAgIGNvbnN0IGRlbGF5ID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUodGhpcy5fb3B0aW9ucy50aW1lcik7XG4gICAgICBpZiAoZGVsYXkpIHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHRoaXMuX2Nsb3NlKFtlbGVtZW50XSksIGRlbGF5KTtcbiAgICB9KTtcbiAgfVxuXG4gIF9ncm91cChlbGVtZW50KSB7XG4gICAgY29uc3QgZ3JvdXAgPSBlbGVtZW50LmdldEF0dHJpYnV0ZSh0aGlzLl9vcHRpb25zLmdyb3VwKTtcbiAgICBpZiAoIWdyb3VwKSByZXR1cm4gW107XG4gICAgcmV0dXJuIFsuLi5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGAke3RoaXMuX3Njb3BlfSBbJHt0aGlzLl9vcHRpb25zLmdyb3VwfT0ke2dyb3VwfV1gKV07XG4gIH1cblxuICBfZm9sbG93ZXJzKGVsZW1lbnQpIHtcbiAgICBjb25zdCBzZWxlY3RvciA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKHRoaXMuX29wdGlvbnMuZm9sbG93ZXIpO1xuICAgIGlmICghc2VsZWN0b3IpIHJldHVybiBbXTtcbiAgICByZXR1cm4gWy4uLmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYCR7dGhpcy5fc2NvcGV9ICR7c2VsZWN0b3J9YCldO1xuICB9XG5cbn1cbiIsImltcG9ydCBUaGltYmxlZnVsIGZyb20gJ3RoaW1ibGVmdWwnO1xuXG5jb25zdCBWSVAgICAgICAgPSAwO1xuY29uc3QgU1RSSUNUVklQID0gMTtcbmNvbnN0IFNDSElQICAgICA9IDI7XG5jb25zdCBYT0NISVAgICAgPSAzO1xuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGFzeW5jICgpID0+IHtcbiAgY29uc3QgRW11bGF0b3IgPSByZXF1aXJlKCcuL2VtdWxhdG9yJyk7XG4gIGNvbnN0IGtleWJvYXJkID0gcmVxdWlyZSgnLi9rZXlib2FyZCcpO1xuICBjb25zdCByZW5kZXIgPSByZXF1aXJlKCcuL2Rpc3BsYXknKTtcbiAgY29uc3QgeyBwbGF5U291bmQsIHN0b3BTb3VuZCB9ID0gcmVxdWlyZSgnLi9zb3VuZCcpO1xuXG4gIGNvbnN0IGluc3RhbmNlID0gbmV3IEVtdWxhdG9yKHsgcmVuZGVyLCBwbGF5U291bmQsIHN0b3BTb3VuZCB9KTtcbiAgYXdhaXQgaW5zdGFuY2UuaW5pdCgpO1xuICBrZXlib2FyZChpbnN0YW5jZSk7XG5cbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBVaW50OEFycmF5KFtcbiAgICAweDAwLCAweGUwLCAweDYxLCAweDE5LCAweDYwLCAweDBhLCAweDIyLCAweDEyLCAweDYwLFxuICAgIDB4MGIsIDB4MjIsIDB4MTIsIDB4NjAsIDB4MGMsIDB4MjIsIDB4MTIsIDB4MTIsIDB4MTAsXG4gICAgMHg2MiwgMHgwYywgMHhmMCwgMHgyOSwgMHhkMSwgMHgyNSwgMHg3MSwgMHgwNSwgMHgwMCxcbiAgICAweGVlXG4gIF0pO1xuXG4gIGluc3RhbmNlLmxvYWRQcm9ncmFtKFZJUCwgcHJvZ3JhbSk7XG5cbiAgY29uc3QgZmlsZVRhcmdldCA9IFRoaW1ibGVmdWwuRmlsZVRhcmdldC5pbnN0YW5jZSgpO1xuICBmaWxlVGFyZ2V0LnJlZ2lzdGVyKCcjZGlzcGxheScsIChmaWxlLCBkYXRhKSA9PiB7XG4gICAgaWYgKCBmaWxlLm5hbWUuc3Vic3RyKC00KSAhPSAnLmNoOCcgKVxuICAgICAgcmV0dXJuIGFsZXJ0KCdZb3UgY2FuIG9ubHkgbG9hZCAqLmNoOCBDSElQLTggUk9NcycpO1xuICAgIGRhdGEgPSBhdG9iKGRhdGEuc3BsaXQoJywnKVsxXSk7XG4gICAgY29uc3QgcHJvZ3JhbSA9IG5ldyBVaW50OEFycmF5KG5ldyBBcnJheUJ1ZmZlcihkYXRhLmxlbmd0aCkpO1xuICAgIGZvciAoIGxldCBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKysgKVxuICAgICAgcHJvZ3JhbVtpXSA9IGRhdGEuY2hhckNvZGVBdChpKTtcbiAgICBpbnN0YW5jZS5sb2FkUHJvZ3JhbShWSVAsIHByb2dyYW0pO1xuICB9KTtcbn0pO1xuIl0sIm5hbWVzIjpbInR5cGVzIiwibW9kdWxlIiwiZXhwb3J0cyIsInR5cGUiLCJWSVAiLCJTVFJJQ1RWSVAiLCJCTElORFZJUCIsImZvbnRzIiwiY2hpcDgiLCJTQ0hJUCIsIlhPQ0hJUCIsInNjaGlwIiwiVWludDhBcnJheSIsInNpbGljb244IiwiY2FudmFzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImNvbnRleHQiLCJnZXRDb250ZXh0Iiwid2lkdGgiLCJoZWlnaHQiLCJieXRlcyIsImltYWdlRGF0YSIsImNyZWF0ZUltYWdlRGF0YSIsInkiLCJ4IiwibWVtb3J5T2Zmc2V0IiwiTWF0aCIsImZsb29yIiwicGl4ZWxPZmZzZXQiLCJkaXNwbGF5T2Zmc2V0IiwiZGF0YSIsInB1dEltYWdlRGF0YSIsImZvbnQiLCJnbyIsIkdvIiwiV2ViQXNzZW1ibHkiLCJpbnN0YW50aWF0ZVN0cmVhbWluZyIsImFzeW5jIiwicmVzcCIsImltcG9ydE9iamVjdCIsInNvdXJjZSIsImFycmF5QnVmZmVyIiwiaW5zdGFudGlhdGUiLCJjb25zdHJ1Y3RvciIsInBsYXlTb3VuZCIsInN0b3BTb3VuZCIsInJlbmRlciIsInRoaXMiLCJfY3ljbGVzUGVyRnJhbWUiLCJfcmVuZGVyIiwiT2JqZWN0IiwiYXNzaWduIiwiZW52IiwicmFuZG9tIiwiaW5pdCIsImZldGNoIiwidGhlbiIsInJlc3VsdCIsIl9jcHUiLCJpbnN0YW5jZSIsInJ1biIsImRpc3BsYXkiLCJtZW1vcnkiLCJidWZmZXIiLCJkaXNwbGF5UHRyIiwiZGlzcGxheVNpemUiLCJzZXRJbnRlcnZhbCIsImN5Y2xlcyIsInNjcmVlbkRpcnR5Iiwic2V0U2NyZWVuQ2xlYW4iLCJjYXRjaCIsImUiLCJjb25zb2xlIiwiZXJyb3IiLCJzZXRDeWNsZXNQZXJGcmFtZSIsIm5ld0N5Y2xlcyIsImxvYWRQcm9ncmFtIiwicHJvZ3JhbSIsImluaXRpYWxpemUiLCJyYW0iLCJyYW1QdHIiLCJyYW1TaXplIiwiaSIsImZvbnREYXRhIiwibGVuZ3RoIiwiZHVtcFN0YXR1cyIsInByZXNzS2V5Iiwia2V5IiwicmVsZWFzZUtleSIsImtleXMiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwia2V5Q29kZSIsImdhaW5Ob2RlIiwic2V0Vm9sdW1lIiwiZ2FpbiIsImF1ZGlvQ3R4IiwiQXVkaW9Db250ZXh0Iiwid2Via2l0QXVkaW9Db250ZXh0IiwiYXVkaW9Db250ZXh0Iiwib3NjaWxsYXRvciIsImNyZWF0ZU9zY2lsbGF0b3IiLCJjcmVhdGVHYWluIiwidmFsdWUiLCJmcmVxdWVuY3kiLCJjb25uZWN0IiwiZGVzdGluYXRpb24iLCJzdGFydCIsInNldHVwU291bmQiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiQ2xpY2siLCJfaGFuZGxlcnMiLCJfY2FsbEhhbmRsZXIiLCJyZWdpc3RlciIsInNlbGVjdG9yIiwiaGFuZGxlcnMiLCJjbGljayIsIm1vdXNlZG93biIsIm1vdXNldXAiLCJwdXNoIiwiZm9yRWFjaCIsInRhcmdldCIsImNsb3Nlc3QiLCJtYXAiLCJoIiwiaGFuZGxlciIsImRlZmF1bHRQcmV2ZW50ZWQiLCJfaW5zdGFuY2UiLCJGaWxlVGFyZ2V0IiwiZHJhZ0NsYXNzIiwiX2RyYWdDbGFzcyIsIl9kcmFnT3ZlciIsIl9kcmFnTGVhdmUiLCJfZHJvcCIsImNhbGxiYWNrIiwicyIsIl9vcGVuRmlsZURpYWxvZyIsIl9pc0Ryb3BUYXJnZXQiLCJzdG9wUHJvcGFnYXRpb24iLCJwcmV2ZW50RGVmYXVsdCIsImRhdGFUcmFuc2ZlciIsImRyb3BFZmZlY3QiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmUiLCJfaGFuZGxlRmlsZSIsImZpbGVzIiwiZmluZCIsImlucHV0IiwiY3JlYXRlRWxlbWVudCIsImMiLCJmaWxlIiwiX3JlYWRGaWxlIiwiciIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwicmVhZGVyIiwiRmlsZVJlYWRlciIsInJlYWRBc0RhdGFVUkwiLCJSb3V0ZXIiLCJyb3V0ZXMiLCJfcm91dGVzIiwiYWRkUm91dGVzIiwiaW5zdGFsbCIsIl9oYW5kbGVDbGljayIsIl9oYW5kbGVOYXZpZ2F0aW9uRXZlbnQiLCJhZGRSb3V0ZSIsInJvdXRlIiwiQXJyYXkiLCJpc0FycmF5IiwiZXZudCIsIm1hdGNoIiwiX21hdGNoaW5nUm91dGUiLCJyb3V0ZXIiLCJzdWJwYXRoIiwibWF0Y2hlcyIsImxpbmsiLCJnZXRBdHRyaWJ1dGUiLCJzdGFydHNXaXRoIiwic3Vic3RyIiwibG9jYXRpb24iLCJoYXNoIiwiX3N1YlJvdXRlck1hdGNoIiwiX3N0cmluZ01hdGNoIiwiX3JlZ0V4cE1hdGNoIiwiZmlsdGVyIiwiUmVnRXhwIiwiVGhpbWJsZWZ1bCIsInNjb3BlIiwib3B0aW9ucyIsIl9zY29wZSIsIl9vcHRpb25zIiwiX25vcm1hbGl6ZU9wdGlvbnMiLCJvcGVuIiwiY2xvc2UiLCJ0b2dnbGUiLCJjbGFzcyIsImdyb3VwIiwidGltZXIiLCJmb2xsb3dlciIsImNsb3NlU2VsZWN0b3IiLCJvcGVuU2VsZWN0b3IiLCJ0b2dnbGVTZWxlY3RvciIsImNsb3NlRWxlbWVudHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwib3BlbkVsZW1lbnRzIiwiX2Nsb3NlIiwiX29wZW4iLCJlbGVtZW50cyIsImVsZW1lbnQiLCJfZm9sbG93ZXJzIiwiX2dyb3VwIiwiZGVsYXkiLCJzZXRUaW1lb3V0IiwiRW11bGF0b3IiLCJrZXlib2FyZCIsIm5hbWUiLCJhbGVydCIsImF0b2IiLCJzcGxpdCIsIkFycmF5QnVmZmVyIiwiY2hhckNvZGVBdCJdLCJzb3VyY2VSb290IjoiIn0=