(()=>{var t={226:t=>{t.exports='\0àabc\0¢,óðe@\0*@ÿ""{ðeÑ%s\bars\b*   Welcomeÿ       to Silicon-8!ÿClick the screenÿor drag a *.ch8ÿfile here ^_^\0dBd E¢ððð\0î\0\0\0\0\0\0  \0\0\0PøPøPx p(ð  @ @ @ p\0\0\0@@@@@ ¨p¨ \0@à@\0\0\0\0@\0\0à\0\0\0\0\0\0  @``@À@@àà`ðà`àððàà`à`ð @@````p`\0\0\0\0@\0@ @@ \0à\0à\0@ @À @\0@`°``ðàààppààààààÀp°`ðà@@@àà   À À àØ¨Ðð°``àà`°pààp`àø    ```¨ØP PP   à @àÀÀ@  À@@@À@ \0\0\0\0\0\0\0à@\0\0\0\0`  `À À\0``  ` `\0@ À`@À\0` `ÀÀ  \0@\0@@ À À@@@@\0 à  \0À   \0@  @\0À À\0` ` \0 À\0@@À@\0   @\0  @@\0  à \0 @@ \0  @\0À@À`@@`À@ @À\0P \0\0'},694:(t,e,s)=>{const n=s(447);t.exports=t=>{switch(t){case n.SCHIP:case n.XOCHIP:return r.schip;default:return r.chip8}};const r={chip8:new Uint8Array([240,144,144,144,240,96,32,32,32,112,240,16,240,128,240,240,16,112,16,240,160,160,240,32,32,240,128,240,16,240,240,128,240,144,240,240,16,16,16,16,240,144,240,144,240,240,144,240,16,240,240,144,240,144,144,240,80,112,80,240,240,128,128,128,240,240,80,80,80,240,240,128,240,128,240,240,128,240,128,128,60,126,231,195,195,195,195,231,126,60,24,56,88,24,24,24,24,24,24,60,62,127,195,6,12,24,48,96,255,255,60,126,195,3,14,14,3,195,126,60,6,14,30,54,102,198,255,255,6,6,255,255,192,192,252,254,3,195,126,60,62,124,224,192,252,254,195,195,126,60,255,255,3,6,12,24,48,96,96,96,60,126,195,195,126,126,195,195,126,60,60,126,195,195,127,63,3,3,62,124]),schip:new Uint8Array([240,144,144,144,240,32,96,32,32,112,240,16,240,128,240,240,16,112,16,240,144,144,240,16,16,240,128,240,16,240,240,128,240,144,240,240,16,32,64,64,240,144,240,144,240,240,144,240,16,240,240,144,240,144,144,224,144,224,144,224,240,128,128,128,240,224,144,144,144,224,240,128,240,128,240,240,128,240,128,128,60,126,231,195,195,195,195,231,126,60,24,56,88,24,24,24,24,24,24,60,62,127,195,6,12,24,48,96,255,255,60,126,195,3,14,14,3,195,126,60,6,14,30,54,102,198,255,255,6,6,255,255,192,192,252,254,3,195,126,60,62,124,224,192,252,254,195,195,126,60,255,255,3,6,12,24,48,96,96,96,60,126,195,195,126,126,195,195,126,60,60,126,195,195,127,63,3,3,62,124]),silicon8:new Uint8Array([96,144,144,144,96,32,96,32,32,112,224,16,96,128,240,224,16,96,16,224,128,144,240,16,16,240,128,224,16,224,96,128,224,144,96,240,16,32,64,64,96,144,96,144,96,96,144,112,16,96,96,144,240,144,144,224,144,224,144,224,112,128,128,128,112,224,144,144,144,224,240,128,240,128,240,240,128,240,128,128,60,126,231,195,195,195,195,231,126,60,24,56,88,24,24,24,24,24,24,60,62,127,195,6,12,24,48,96,255,255,60,126,195,3,14,14,3,195,126,60,6,14,30,54,102,198,255,255,6,6,255,255,192,192,252,254,3,195,126,60,62,124,224,192,252,254,195,195,126,60,255,255,3,6,12,24,48,96,96,96,60,126,195,195,126,126,195,195,126,60,60,126,195,195,127,63,3,3,62,124])}},447:t=>{t.exports={AUTO:0,STRICTVIP:1,VIP:2,BLINDVIP:3,SCHIP:4,XOCHIP:5}},497:t=>{const e=document.getElementById("display"),s=e.getContext("2d");t.exports={render:(t,n,r)=>{e.width=t,e.height=n;const o=s.createImageData(t,n);for(let e=0;e<n;e++)for(let s=0;s<t;s++){const n=Math.floor(e*t/8+s/8),a=s%8,i=e*t*4+4*s;o.data[i+0]=r[n]&128>>a?255:0,o.data[i+1]=r[n]&128>>a?170:0,o.data[i+2]=r[n]&128>>a?68:0,o.data[i+3]=221}s.putImageData(o,0,0)}}},755:(t,e,s)=>{const n=s(694),r=new Go;WebAssembly.instantiateStreaming||(WebAssembly.instantiateStreaming=async(t,e)=>{const s=await(await t).arrayBuffer();return await WebAssembly.instantiate(s,e)}),t.exports=class{constructor({playSound:t,stopSound:e,display:s}){t||=()=>{},e||=()=>{},Object.assign(r.importObject.env,{"main.randomByte":()=>255&Math.floor(256*Math.random()),"main.playSound":t,"main.stopSound":e,"main.render":(t,e,n)=>{const r=new Uint8Array(this._cpu.memory.buffer,n,t*e/8);s.render(t,e,r)}})}init(){return WebAssembly.instantiateStreaming(fetch("silicon8.wasm"),r.importObject).then((t=>{this._cpu=t.instance.exports,r.run(t.instance),setInterval((()=>this._cpu.clockTick()),1e3/60)})).catch((t=>{console.error(t)}))}setCyclesPerFrame(t){this._cpu.setCyclesPerFrame(t)}loadProgram(t,e){this._cpu.reset(t);const s=new Uint8Array(this._cpu.memory.buffer,this._cpu.ramPtr(),this._cpu.ramSize()),r=n(t);for(let t=0;t<r.length;t++)s[t]=r[t];for(let t=512;t<512+e.length;t++)s[t]=e[t-512]}dumpStatus(){this._cpu.dumpStatus()}pressKey(t){this._cpu.pressKey(t)}releaseKey(t){this._cpu.releaseKey(t)}}},432:t=>{t.exports=t=>{const e={38:5,37:7,39:9,40:8,49:1,50:2,51:3,52:12,81:4,87:5,69:6,82:13,65:7,83:8,68:9,70:14,90:10,88:0,67:11,86:15,48:0,53:5,54:6,55:7,56:8,57:9};window.addEventListener("keydown",(s=>{13==s.keyCode&&t&&t.dumpStatus(),e[s.keyCode]&&t&&t.pressKey(e[s.keyCode])})),window.addEventListener("keyup",(s=>{t&&t.releaseKey(e[s.keyCode])})),document.querySelectorAll(".keyboard button").forEach((e=>{e.addEventListener("touchstart",(()=>{t.pressKey(e.dataset.value)}),{passive:!0}),e.addEventListener("touchend",(()=>{t.releaseKey(e.dataset.value)}),{passive:!0})}))}},281:t=>{let e;function s(t){e||function(){const t=new(window.AudioContext||window.webkitAudioContext||window.audioContext),s=t.createOscillator();e=t.createGain(),e.gain.value=0,s.frequency.value=600,s.type="triangle",s.connect(e),e.connect(t.destination),s.start()}(),e.gain.value=t}t.exports={playSound:()=>{s(.1)},stopSound:()=>{s(0)}}}},e={};function s(n){var r=e[n];if(void 0!==r)return r.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,s),o.exports}s.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return s.d(e,{a:e}),e},s.d=(t,e)=>{for(var n in e)s.o(e,n)&&!s.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},s.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";class t{constructor(){this._handlers={},document.addEventListener("click",(t=>this._callHandler("click",t))),document.addEventListener("mousedown",(t=>this._callHandler("mousedown",t))),document.addEventListener("mouseup",(t=>this._callHandler("mouseup",t)))}register(t,e={click:null,mousedown:null,mouseup:null}){"function"==typeof e&&(e={click:e}),this._handlers[t]=this._handlers[t]||[],this._handlers[t].push(e)}_callHandler(t,e){Object.keys(this._handlers).forEach((s=>{null!==e.target.closest(s)&&this._handlers[s].map((e=>e[t])).forEach((t=>{"function"!=typeof t||e.defaultPrevented||t(e,s)}))}))}}t.instance=function(){return t._instance?t._instance:t._instance=new t};const e=t;class n{constructor(t="dragging"){this._dragClass=t,this._handlers={},document.addEventListener("dragover",(t=>this._dragOver(t))),document.addEventListener("dragleave",(t=>this._dragLeave(t))),document.addEventListener("drop",(t=>this._drop(t)))}register(t,s){this._handlers[t]=s,e.instance().register(t,((t,e)=>this._openFileDialog(t,e)))}_dragOver(t){this._isDropTarget(t.target)&&(t.stopPropagation(),t.preventDefault(),t.dataTransfer.dropEffect="copy",t.target.classList.add(this._dragClass))}_dragLeave(t){this._isDropTarget(t.target)&&(t.stopPropagation(),t.preventDefault(),t.target.classList.remove(this._dragClass))}_drop(t){let e=this._isDropTarget(t.target);e&&(t.stopPropagation(),t.preventDefault(),t.target.classList.remove(this._dragClass),this._handleFile(e,t,t.dataTransfer.files[0]))}_isDropTarget(t){return Object.keys(this._handlers).find((e=>{if(t.closest(e))return e}))||!1}_openFileDialog(t,e){const s=document.createElement("input");s.type="file",s.addEventListener("change",(s=>this._handleFile(e,t,s.target.files[0]))),s.click()}_handleFile(t,e,s){this._readFile(s).then((n=>this._handlers[t](s,n,e)))}_readFile(t){return new Promise(((e,s)=>{var n=new FileReader;n.addEventListener("load",(t=>e(t.target.result))),n.readAsDataURL(t)}))}}n.instance=function(){return n._instance?n._instance:n._instance=new n};const r=n;class o{constructor(t=!1,e=null){this._routes=[],t&&this.addRoutes(t,e)}install(){return e.instance().register("a[href]",(t=>this._handleClick(t))),window.addEventListener("hashchange",(t=>this._handleNavigationEvent(t))),window.addEventListener("load",(t=>this._handleNavigationEvent(t))),this}addRoute(t,e){return this._routes.push([t,e]),this}addRoutes(t,e=null){return Array.isArray(t)?t.forEach((t=>this.addRoute(t,e))):Object.keys(t).forEach((e=>this.addRoute(e,t[e]))),this}route(t,e){const s=this._matchingRoute(t);return s&&s.router?s.router.route(s.subpath,e):s&&s.handler?s.handler(s.route,s.matches,e):void 0}_handleClick(t){let e=t.target.getAttribute("href");e.startsWith("#")&&(e=e.substr(1),this._matchingRoute(e)&&(window.location.hash=e,t.preventDefault()))}_handleNavigationEvent(t){let e=window.location.hash;e.startsWith("#")&&(e=e.substr(1)),this.route(e,t)}_matchingRoute(t){return t&&(this._subRouterMatch(t)||this._stringMatch(t)||this._regExpMatch(t))}_subRouterMatch(t){const e=this._routes.filter((t=>t[1]instanceof o)).find((e=>t.startsWith(e[0]+"/")||t==e[0]));return e&&{router:e[1],subpath:t.substr(e[0].length+1)}}_stringMatch(t){const e=this._routes.find((e=>t==e[0]));return e&&{route:e[0],handler:e[1]}}_regExpMatch(t){const e=this._routes.filter((t=>t[0]instanceof RegExp)).find((e=>t.match(e[0])));return e&&{route:e[0],handler:e[1],matches:t.match(e[0])}}}const a={Click:e,FileTarget:r,Router:o,Energize:class{constructor(t,s={}){this._scope=t,this._options=this._normalizeOptions(s),e.instance().register(`${t} [${this._options.open}], ${t} [${this._options.close}], ${t} [${this._options.toggle}]`,(t=>this._handleClick(t)))}_normalizeOptions(t){return Object.assign({class:"active",open:"data-open",close:"data-close",toggle:"data-toggle",group:"data-group",timer:"data-timer",follower:"data-follower"},t)}_handleClick(t){const e=t.target.closest(`[${this._options.open}], [${this._options.close}], [${this._options.toggle}]`),s=e.getAttribute(this._options.close),n=e.getAttribute(this._options.open),r=e.getAttribute(this._options.toggle);let o=s?document.querySelectorAll(`${this._scope} ${s}`):[],a=n?document.querySelectorAll(`${this._scope} ${n}`):[];o=[...o,...r?document.querySelectorAll(`${this._scope} ${r}.${this._options.class}`):[]],a=[...a,...r?document.querySelectorAll(`${this._scope} ${r}:not(.${this._options.class})`):[]],this._close(o),this._open(a),t.preventDefault(),t.stopPropagation()}_close(t){t.forEach((t=>{t.classList.remove(this._options.class),this._close(this._followers(t))}))}_open(t){t.forEach((t=>{this._close(this._group(t)),t.classList.add(this._options.class),this._open(this._followers(t));const e=t.getAttribute(this._options.timer);e&&window.setTimeout((()=>this._close([t])),e)}))}_group(t){const e=t.getAttribute(this._options.group);return e?[...document.querySelectorAll(`${this._scope} [${this._options.group}=${e}]`)]:[]}_followers(t){const e=t.getAttribute(this._options.follower);return e?[...document.querySelectorAll(`${this._scope} ${e}`)]:[]}}},i=a;window.Thimbleful=a;var l=s(226),c=s.n(l);const d=s(447),h=new Uint8Array(c().length);for(let t=0;t<c().length;t++)h[t]=c().charCodeAt(t);window.addEventListener("load",(async()=>{const t=s(755),e=s(432),n=s(497),{playSound:r,stopSound:o}=s(281),a=new t({display:n,playSound:r,stopSound:o});await a.init(),e(a),a.loadProgram(d.AUTO,h),i.FileTarget.instance().register("#display",((t,e)=>{if(".ch8"!=t.name.substr(-4))return alert("You can only load *.ch8 CHIP-8 ROMs");e=atob(e.split(",")[1]);const s=new Uint8Array(new ArrayBuffer(e.length));for(let t=0;t<e.length;t++)s[t]=e.charCodeAt(t);a.loadProgram(d.AUTO,s)}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,